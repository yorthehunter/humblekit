/*doc
---
title: Buttons mixins
name: buttons-mixins
category: modules - buttons
---

#####
  ```
  @mixin button_style(
  $style-name,
  $bg,
  $color:        white,
  $border:       darken($bg, $btn-darken-amount),
  $active-bg:    darken($bg, $btn-darken-amount),
  $active-color: $color,
  $border-width: nil)
  ```

Creates a custom button style in the same way as `.btn-primary`, `.btn-secondary`, etc.


##### button_style($style, $bg, $color: white, $border: darken($bg, $btn-darken-amount))
Creates a custom button style in the same way as `.btn-primary`, `.btn-secondary`, etc.

- `$style` is a string that describes the style and uniquely identifies the class
- `$bg` is a color value or variable name that refers to the background color of the button
- `$color` (OPTIONAL) is a color value or variable name that refers to the default text color of the module
- `$border` (OPTIONAL) is a color value or variable name that refers to the border color of the module

***Input***

```.language-sass
@include button_style("alert", $alert);
```

***Output***

```
  %btn-alert,
  .btn-alert {
    background-color: $alert;
    color: white;
    border-color: darken($alert, $btn-darken-amount);

    &:hover {
      @if $btn-hover-bg-option {
        background-color: lighten($alert, $btn-hover-adjustment);
      }
      border-color: lighten($alert, $btn-hover-adjustment);
    }

    &:active,
    &.current,
    &.active {
      color: white;
      background-color: darken($alert, $btn-darken-amount) !important;
    }

    &:hover,
    &:visited {
      color: white;
    }
  }
```

##### btn_size($size, $longname, $lh)
Creates a custom button size in the same way as `.btn-xl`, `.btn-md`, etc.

- `$size` is a string suffix that describes the size name and uniquely identifies the class
- `$longname` is a string used to describe the size name in a longer format (e.g. "large"); mostly just used internally
- `$lh` is the line-height of the button used to determine the appropriate vertical height of the button (e.g. "$lh: 3")

***Input***

```
@include btn_size("xxl", "extra-extra-large", 8rem);
```

***Output***

```
  %btn-xxl,
  .btn-xxl {
    @if $btn-border-option {
      line-height: calc(8rem - (2 * #{$btn-border-width}));
    } @else {
      line-height: 8rem;
    }

    &.btn-outline,
    &.btn-outline-dark{
      line-height: calc(8rem - (2 * #{$btn-outline-border-width}));
    }

    height: auto;
    margin-bottom: 0;

    &:not([class^="px"]):not([class*="px"]) {
      padding-left:  (8rem / 2);
      padding-right: (8rem / 2);
    }
  }
```

*/

@mixin button_style(
  $style-name,
  $bg,
  $color:        white,
  $border:       darken($bg, $btn-darken-amount),
  $active-bg:    darken($bg, $btn-darken-amount),
  $active-color: $color,
  $border-width: nil){

  %#{$btn-class-prefix}-#{$style-name},
  .#{$btn-class-prefix}-#{$style-name} {
    background-color: $bg;
    color: $color;
    border-color: $border;

    &:hover {
      @if $btn-hover-bg-option { background-color: lighten($bg, $btn-hover-adjustment); }
      @if $btn-border-option   { border-color: lighten($border, $btn-hover-adjustment); }
    }

    &:active,
    &.current,
    &.active {
      color: $active-color;
      background-color: $active-bg !important;
    }

    &:hover,
    &:visited {
      color: $color;
    }

    @if $border-width { border-width: $border-width; }
  }
}

@mixin button_size(
  $height,
  $name
){
  %#{$btn-class-prefix}-#{$name},
  .#{$btn-class-prefix}-#{$name}{
    @if $btn-border-option {
      line-height: 1; // For FireFox
      line-height: calc((#{$height} * 0.5rem) - (2 * #{$btn-border-width}));
    } @else {
      line-height: $height * 0.5rem;
    }
    height: $height * 1rem;
    font-size: $height * 0.5rem;

    &:not([class^="py"]):not([class*="py"]) {
      padding-top:    (($height * 0.5) / 2)*1rem;
      padding-bottom: (($height * 0.5) / 2)*1rem;
    }
  }
}


@mixin btn_size($size, $longname, $lh) {
  %#{$btn-class-prefix}#{$size},
  .#{$btn-class-prefix}#{$size} {
    @if $btn-border-option {
      line-height: calc(#{$lh} - (2 * #{$btn-border-width}));
    } @else {
      line-height: $lh;
    }

    &.btn-outline,
    &.btn-outline-dark{
      line-height: calc(#{$lh} - (2 * #{$btn-outline-border-width}));
    }

    height: auto;
    margin-bottom: 0;

//    &:not([class^="px"]):not([class*="px"]) {
//      padding-left:  ($lh / 2);
//      padding-right: ($lh / 2);
//    }

    @if $longname == "large" {
      @extend %f4 !optional;
    } @else if $longname == "extra-large" {
      @extend %f3 !optional;
    } @else if $size == "" {
      @extend %f-md !optional;
    } @else {
      @extend %f#{$size} !optional;
    }

    @if $longname == "extra-small" {
      margin-top: 0.35rem;
      margin-bottom: 0.35rem;
    }
  }
}