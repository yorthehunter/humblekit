/*
===================================================================
What you need to know about this file:
===================================================================

Buttons are generated through the use of Sass variables and mixins.
The mixins are available to extend (if you can make sense of them)
if you want to add more button styles or sizes.

All of the basic button sizes and styles are generated by calling
the respective mixins with parameters defined as Sass lists (arrays).
For odd situations (like default buttons or link buttons) it was
easier to code separately instead of complicating the mixins.

TODO: Can this be DRYer?

*/


/*doc
---
title: "Customizing buttons"
name: buttons-variables
category: modules - buttons
---

*Overwrite these variables in `_custom_variables.scss` to change these defaults.*

```
$btn-class-prefix:     "btn" !default;

$btn-font-weight:      $font-weight-base !default;
$btn-border-radius:    0.25rem !default;
$btn-shadow:           inset 0 2px 6px rgba(0,0,0,0.3) !default;
$btn-darken-amount:    20% !default;

$btn-bg-default:       $base-whale-gray !default;
$btn-color-default:    white !default;
$btn-border-default:   darken($btn-bg-default, $btn-darken-amount) !default;

$btn-bg-primary:       $base-blue !default;
$btn-color-primary:    white !default;
$btn-border-primary:   darken($btn-bg-primary, $btn-darken-amount) !default;

$btn-bg-secondary:     $base-blue-soft !default;
$btn-color-secondary:  white !default;
$btn-border-secondary: darken($btn-bg-secondary, $btn-darken-amount) !default;

$btn-bg-tertiary:      $base-violet !default;
$btn-color-tertiary:   white !default;
$btn-border-tertiary:  darken($btn-bg-tertiary, $btn-darken-amount) !default;

$btn-bg-link:          $base-blue-light !default;
$btn-bg-link-dark:     rgba(255,255,255,0.15) !default;
$btn-border-link:      rgba($base-blue-light,0.0) !default;
$btn-border-link-dark: rgba($base-blue-light,0.0) !default;

$btn-hover-adjustment:     8% !default;
$btn-border-width:         1px !default;
$btn-outline-border-width: 2px !default;
$btn-transition-speed:     0.2s !default;
$btn-vertical-align:       middle !default;

--- Optional customizations ---
$btn-inset-option:       false !default;
$btn-border-option:      true !default;
$btn-radius-option:      true !default;
$btn-text-shadow-option: false !default;
$btn-transition-option:  true !default;
$btn-hover-bg-option:    true !default;
$btn-mobile-full-width:  true !default;
```
*/

$base-btn-sizes: ("-xs", "extra-small", 1.3rem),
                 ("-sm", "small",       2rem),
                 ("-md", "medium",      3rem),
                 ("-lg", "large",       4rem),
                 ("-xl", "extra-large", 5rem);

$btn-names: ("primary",   $btn-bg-primary,   $btn-color-primary,   $btn-border-primary),
            ("secondary", $btn-bg-secondary, $btn-color-secondary, $btn-border-secondary),
            ("tertiary",  $btn-bg-tertiary,  $btn-color-tertiary,  $btn-border-tertiary);


/* Button Options */

$btn-inset-option:       false !default;
$btn-border-option:      true !default;
$btn-radius-option:      true !default;
$btn-text-shadow-option: false !default;
$btn-transition-option:  true !default;
$btn-hover-bg-option:    true !default;
$btn-mobile-full-width:  true !default;


/*doc
---
title: Buttons
name: buttons
category: modules - buttons
---

#####Button sizes
```html_example
<a href="#" class="btn btn-xl">xl Button</a>
<a href="#" class="btn btn-lg">lg Button</a>
<a href="#" class="btn">md Button</a>
<a href="#" class="btn btn-sm">sm Button</a>
<a href="#" class="btn btn-xs">xs Button</a>
```

#####Button colors
```html_example
<a href="#" class="btn btn-primary">Primary</a>
<a href="#" class="btn btn-secondary">Secondary</a>
<a href="#" class="btn btn-tertiary">Tertiary</a>
<a href="#" class="btn btn-link">Link Button</a>
```

#####Outline buttons
```html_example
<div class="p1">
  <a href="#" class="btn btn-outline">Default</a>
  <a href="#" class="btn btn-primary btn-outline">Primary</a>
  <a href="#" class="btn btn-secondary btn-outline">Secondary</a>
  <a href="#" class="btn btn-tertiary btn-outline">Tertiary</a>
</div>
<div class="p1 bg-gray">
  <a href="#" class="btn btn-outline-dark">Default</a>
  <a href="#" class="btn btn-primary btn-outline-dark">Primary</a>
  <a href="#" class="btn btn-secondary btn-outline-dark">Secondary</a>
  <a href="#" class="btn btn-tertiary btn-outline-dark">Tertiary</a>
</div>
```

#####Button active/current state
*Note: `.active` and `.current` are the same visually, but may mean different things
semantically. Use at your own discretion.*

```html_example
<div class="p1">
  <a href="#" class="btn btn-primary current">Primary</a>
  <a href="#" class="btn btn-secondary active">Secondary</a>
  <a href="#" class="btn btn-tertiary current">Tertiary</a>
  <a href="#" class="btn btn-link active">Link Button</a>
</div>
<div class="p1 bg-gray">
  <a href="#" class="btn btn-link btn-link-dark light">Dark Link Button</a>
  <a href="#" class="btn btn-link btn-link-dark light active">Dark Link Button</a>
</div>
```

#####Form inputs using the same classes
```html_example
<button class="btn btn-sm btn-primary">button</button>
<input type="button" value="input button" class="btn btn-sm btn-secondary">
<input type="submit" value="submit" class="btn btn-sm btn-link">
```
*/

/*doc
---
title: Buttons mixins
name: buttons-mixins
category: modules - buttons
---

##### btn_style($style, $bg, $color: white, $border: darken($bg, $btn-darken-amount))
Creates a custom button style in the same way as `.btn-primary`, `.btn-secondary`, etc.

- `$style` is a string that describes the style and uniquely identifies the class
- `$bg` is a color value or variable name that refers to the background color of the button
- `$color` (OPTIONAL) is a color value or variable name that refers to the default text color of the module
- `$border` (OPTIONAL) is a color value or variable name that refers to the border color of the module

***Input***

```
@include btn_style("alert", $alert);
```

***Output***

```
  %btn-alert,
  .btn-alert {
    background-color: $alert;
    color: white;
    border-color: darken($alert, $btn-darken-amount);

    &:hover {
      @if $btn-hover-bg-option {
        background-color: lighten($alert, $btn-hover-adjustment);
      }
      border-color: lighten($alert, $btn-hover-adjustment);
    }

    &:active,
    &.current,
    &.active {
      color: white;
      background-color: darken($alert, $btn-darken-amount) !important;
    }

    &:hover,
    &:visited {
      color: white;
    }
  }
```

##### btn_size($size, $longname, $lh)
Creates a custom button size in the same way as `.btn-xl`, `.btn-md`, etc.

- `$size` is a string suffix that describes the size name and uniquely identifies the class
- `$longname` is a string used to describe the size name in a longer format (e.g. "large"); mostly just used internally
- `$lh` is the line-height of the button used to determine the appropriate vertical height of the button (e.g. "$lh: 3")

***Input***

```
@include btn_size("xxl", "extra-extra-large", 8rem);
```

***Output***

```
  %btn-xxl,
  .btn-xxl {
    @if $btn-border-option {
      line-height: calc(8rem - (2 * #{$btn-border-width}));
    } @else {
      line-height: 8rem;
    }

    &.btn-outline,
    &.btn-outline-dark{
      line-height: calc(8rem - (2 * #{$btn-outline-border-width}));
    }

    height: auto;
    margin-bottom: 0;

    &:not([class^="px"]):not([class*="px"]) {
      padding-left:  (8rem / 2);
      padding-right: (8rem / 2);
    }
  }
```

*/

@mixin btn_style($style, $bg, $color: white, $border: darken($bg, $btn-darken-amount)) {
  %#{$btn-class-prefix}-#{$style},
  .#{$btn-class-prefix}-#{$style} {
    background-color: $bg;
    color: $color;
    border-color: $border;

    &:hover {
      @if $btn-hover-bg-option {
        background-color: lighten($bg, $btn-hover-adjustment);
      }
      border-color: lighten($bg, $btn-hover-adjustment);
    }

    &:active,
    &.current,
    &.active {
      color: $color;
      background-color: darken($bg, $btn-darken-amount) !important;
    }

    &:hover,
    &:visited {
      color: $color;
    }
  }
}

@mixin btn_size($size, $longname, $lh) {
  %#{$btn-class-prefix}#{$size},
  .#{$btn-class-prefix}.#{$btn-class-prefix}#{$size} {
    @if $btn-border-option {
      line-height: calc(#{$lh} - (2 * #{$btn-border-width}));
    } @else {
      line-height: $lh;
    }

    &%btn-outline,
    &%btn-outline-dark,
    &.btn-outline,
    &.btn-outline-dark{
      line-height: calc(#{$lh} - (2 * #{$btn-outline-border-width}));
    }

    height: auto;
    margin-bottom: 0;

    &:not([class^="px"]):not([class*="px"]) {
      padding-left:  ($lh / 2);
      padding-right: ($lh / 2);
    }

    @if $longname == "large" {
      @extend %f4 !optional;
    } @else if $longname == "extra-large" {
      @extend %f3 !optional;
    } @else if $size == "" {
      @extend %f-md !optional;
    } @else {
      @extend %f#{$size} !optional;
    }

    @if $longname == "extra-small" {
      margin-top: 0.35rem;
      margin-bottom: 0.35rem;
    }
  }
}

@mixin buttons_styles {
  %#{$btn-class-prefix},
  .#{$btn-class-prefix} {
    display: inline-block;
    font-weight: $btn-font-weight;
    text-align: center;
    background-color: $btn-bg-default;
               color: $btn-color-default;
    border-style: solid;
    border-color: $btn-border-default;
    text-decoration: none;
    box-sizing: border-box;
    cursor: pointer;
    @extend %f-md !optional;

    &:not([class^="vertical"]):not([class*="vertical"]) {
      vertical-align: $btn-vertical-align;;
    }

    @if $btn-border-option { border-width: $btn-border-width; }

    @if $btn-radius-option { border-radius: $btn-border-radius; }

    @if $btn-transition-option { transition: all $btn-transition-speed; }

    &:hover {
      @if $btn-hover-bg-option {
        background-color: lighten($btn-bg-default, $btn-hover-adjustment);
      }
      border-color: lighten($btn-border-default, $btn-hover-adjustment);
      color: $btn-color-default;
      text-decoration: none;
      @if $btn-text-shadow-option {
        text-shadow: 0 0 15px white, 0 0 30px white;
      }
    }
    &:active,
    &.current,
    &.active {
      @if $btn-inset-option { box-shadow: $btn-shadow; }
      background-color: darken($btn-bg-default, $btn-darken-amount) !important;
      border-color: transparent;
    }
    &:active,
    &:visited {
      color: $btn-color-default;
    }

    &.disabled,
    &[disabled] {
      cursor: not-allowed;
      pointer-events: none;
      opacity: 0.45;
      box-shadow: none;
    }

    &:focus {
      outline: 0;
      @extend %shadowed-link-light-border !optional;
    }
  }

  // Target input and buttons and submits with a button class
  input.#{$btn-class-prefix},
  button.#{$btn-class-prefix} {
    padding-top: 0;
    padding-bottom: 0;
  }

  // Style buttons that don't have an explicit size the same as 'btn-md'
  @include btn_size("", "base", 3rem);

  @each $size in $base-btn-sizes {
    @include btn_size(nth($size, 1), nth($size, 2), nth($size, 3))
  }

  @each $name in $btn-names {
    @include btn_style(nth($name, 1), nth($name, 2), nth($name, 3), nth($name, 4));
  }

  %#{$btn-class-prefix}-link,
  .#{$btn-class-prefix}-link {
    background-color: transparent;
    color: $link-color;
    border-color: $btn-border-link;

    &:visited {
      color: $link-visited-color;
    }
    &:hover {
      background-color: $btn-bg-link;
      color: $link-hover-color;
      border-color: lighten($btn-border-link, $btn-hover-adjustment);
    }
    &:active {
      color: $link-active-color;
    }

    &%#{$btn-class-prefix}-link-dark,
    &.#{$btn-class-prefix}-link-dark {
      &:hover {
        background-color: $btn-bg-link-dark;
      }
    }

    &.current,
    &.active {
      background-color: $btn-bg-link;
    }
  }

  // By default, expand buttons to full-width of their parent at xs breakpoint
  @if $btn-mobile-full-width == true {
    @include at_breakpoint(xs) {
      .#{$btn-class-prefix}:not(.#{$btn-class-prefix}-inline) {
        width: 100%;
        margin-left: 0 !important;
        margin-right: 0 !important;
        &:not([class^="px"]):not([class*="px"]):not([class^="py"]):not([class*="py"]) {
          padding-left: 0 !important;
          padding-right: 0 !important;
        }
      }
    }
  }

  %#{$btn-class-prefix}-outline-dark,
  .#{$btn-class-prefix}-outline-dark {
    border-width: $btn-outline-border-width;
    border-color: $ghost-white-base;
    color:        $ghost-white-base;
    font-weight:  $font-weight-base;
    background-color: transparent;

    &%#{$btn-class-prefix}-primary,
    &.#{$btn-class-prefix}-primary {
      &:hover {
        color: $btn-bg-primary;
      }
    }
    &#{$btn-class-prefix}-secondary
    &.#{$btn-class-prefix}-secondary {
      &:hover {
        color: $btn-bg-secondary;
      }
    }
    &#{$btn-class-prefix}-tertiary
    &.#{$btn-class-prefix}-tertiary {
      &:hover {
        color: $btn-bg-tertiary;
      }
    }

    &:hover {
      border-color: transparent;
      background-color: white;
      color: $btn-bg-default;
    }
  }


  %#{$btn-class-prefix}-outline,
  .#{$btn-class-prefix}-outline {
    border-width: $btn-outline-border-width;
    font-weight: $font-weight-base;
    background-color: transparent;
    border-color: $btn-bg-default;

    &, &:link, &:visited {
      color: $btn-bg-default;
    }

    &%#{$btn-class-prefix}-primary,
    &.#{$btn-class-prefix}-primary {
      border-color: $btn-bg-primary;

      &, &:link, &:visited {
        color: $btn-bg-primary;
      }

      &:hover {
        background-color: $btn-bg-primary;
      }
    }
    &%#{$btn-class-prefix}-secondary,
    &.#{$btn-class-prefix}-secondary {
      border-color: $btn-bg-secondary;

      &, &:link, &:visited {
        color: $btn-bg-secondary;
      }

      &:hover {
        background-color: $btn-bg-secondary;
      }
    }
    &%#{$btn-class-prefix}-tertiary,
    &.#{$btn-class-prefix}-tertiary {
      border-color: $btn-bg-tertiary;

      &, &:link, &:visited {
        color: $btn-bg-tertiary;
      }

      &:hover {
        background-color: $btn-bg-tertiary;
      }
    }

    &:hover {
      border-color:     transparent;
      color:            white;
    }
  }

  /*doc
  ---
  title: "Button groups"
  name: buttons_groups
  category: modules - buttons
  ---
  ```html_example
  <div class="btn-group mr1">
    <a href="#" class="btn btn-sm">Button</a>
    <a href="#" class="btn btn-sm current">Button</a>
    <a href="#" class="btn btn-sm">Button</a>
  </div>

  <div class="btn-group">
    <a href="#" class="btn btn-tertiary">Button</a>
    <a href="#" class="btn btn-tertiary">Button</a>
  </div>
  ```
  */

  .#{$btn-class-prefix}-group-flex,
  .#{$btn-class-prefix}-group {
    display: flex;
            flex-direction: row;
    -webkit-flex-direction: row;

    @include at_breakpoint(gtxs) {

      > .#{$btn-class-prefix}:not(:first-child):not(:last-child) {
        margin-left: -1px;
        margin-right: -1px;
        border-radius: 0;
      }

      > .#{$btn-class-prefix}:first-child {
        border-bottom-right-radius: 0;
        border-top-right-radius: 0;
        margin: 0;
      }

      > .#{$btn-class-prefix}:last-child {
        border-bottom-left-radius: 0;
        border-top-left-radius: 0;
        margin: 0;
      }
    }

    @include at_breakpoint(xs){
              flex-direction: column;
      -webkit-flex-direction: column;

      > .#{$btn-class-prefix}:not(:first-child):not(:last-child) {
        margin-top: -1px;
        margin-bottom: -1px;
        border-radius: 0;
      }

      > .#{$btn-class-prefix}:last-child {
        border-top-left-radius: 0;
        border-top-right-radius: 0;
        margin: 0;
      }

      > .#{$btn-class-prefix}:first-child {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
        margin: 0;
      }
    }
  }

  .#{$btn-class-prefix}-group-flex-vertical,
  .#{$btn-class-prefix}-group-vertical {
    display: inline-flex;
    flex-direction: column;
    -webkit-flex-direction: column;

    @include at_breakpoint(xs) {
      display: flex;
    }

    > .#{$btn-class-prefix}:not(:first-child):not(:last-child) {
      margin-top:    -1px;
      margin-bottom: -1px;
      border-radius: 0;
    }

    > .#{$btn-class-prefix}:last-child {
      border-top-left-radius:  0;
      border-top-right-radius: 0;
    }

    > .#{$btn-class-prefix}:first-child {
      border-bottom-left-radius:  0;
      border-bottom-right-radius: 0;
    }
  }


}