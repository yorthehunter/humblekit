/* Container
   ========================================================================== */
/**
* The container class, when included, will constrain the width of its
* children, based on defined media breakpoints.
*
* 1. Include a $container-max if you want to constrain the maximum allowable
*    width for the container, regardless of breakpoint constraints.
*
* 2. Center the container by default.
*/

/* Container constraint variables */

$container-pad:   10px;
$container-sm:    ($media-width-xs - ($container-pad*2)) !default;
$container-md:    ($media-width-sm - ($container-pad*2)) !default;
$container-lg:    ($media-width-md - ($container-pad*2)) !default;
$container-xl:    ($media-width-lg - ($container-pad*2)) !default;

$container-max:   null !default; /* 1 */
$container-align: center !default;

.container {
  padding: 0 $container-pad;
  max-width: $container-max;

         @if $container-align == left {
    margin-left: 0;
    margin-right: auto;
  } @else if $container-align == right {
    margin-left: auto;
    margin-right: 0;
  } @else {
    margin-left: auto; /* 2 */
    margin-right: auto; /* 2 */
  }

  @include at_breakpoint(xl) {
    width: $container-xl;
  }
  @include at_breakpoint(ltlg) {
    width: $container-lg;
  }
  @include at_breakpoint(ltmd) {
    width: $container-md;
  }
  @include at_breakpoint(ltsm) {
    width: $container-sm;
  }
  @include at_breakpoint(xs) {
    width: 100%;
  }

  &.contain_to {
    &._lg { max-width: $container-lg; }
    &._md { max-width: $container-md; }
    &._sm { max-width: $container-sm; }
  }
}

