/* Container
   ========================================================================== */
/**
* The container class, when included, will constrain the width of its
* children, based on defined media breakpoints.
*
* 1. Include a $container-max if you want to constrain the maximum allowable
*    width for the container, regardless of breakpoint constraints.
*
* 2. Center the container by default.
*
* 3. @if statement handles
*/

/* Container constraint variables */

$container-pad:   10px;
$container-sm:    ($media-width-xs - ($container-pad*2)) !default;
$container-md:    ($media-width-sm - ($container-pad*2)) !default;
$container-lg:    ($media-width-md - ($container-pad*2)) !default;
$container-xl:    ($media-width-lg - ($container-pad*2)) !default;

$container-max:   null !default; /* 1 */

// $container-align - possible values: left / right / center
$container-align: center !default; /* 2 */

.container {
  padding: 0 $container-pad;
  max-width: $container-max;

         @if $container-align == left { /* 3 */
    margin-left: 0;
    margin-right: auto;
  } @else if $container-align == right {
    margin-left: auto;
    margin-right: 0;
  } @else {
    margin-left: auto;
    margin-right: auto;
  }


  /**
  * @include at_breakpoints to collapse the container as it reaches
  * each breakpoint as defined.
  */

  @include at_breakpoint(xl) { /* 4 */
    width: $container-xl;
  }
  @include at_breakpoint(ltlg) {
    width: $container-lg;
  }
  @include at_breakpoint(ltmd) {
    width: $container-md;
  }
  @include at_breakpoint(ltsm) {
    width: $container-sm;
  }
  @include at_breakpoint(xs) {
    width: 100%;
  }


  /**
    * 1. Use ._flex to extend the .container class and allow a fully flexible,
    *    100% width container that still pads the sides appropriately. Totally
    *    works well with the grid classes, too.
    *
    * 2. Use .contain_to to extend the .container class, along with a
    *    modifier class (_lg, _md, _sm) to set a max width for a particular
    *    container. By default, the .container class contains to xl.
    *
    * For example: Maybe a text-heavy section will ready better when contained
    * to a md size, but the header and footer can remain contained to xl size.
    *
    * <header class="container">
    *   Header content
    * </header>
    * <section class="main-content container contain_to _md">
    *   Body content
    * </section>
    * <footer class="container">
    *   Footer content
    * </footer>
    */

  &._flex { /* 1 */
    max-width: 100%;
    width: 100%;
  }

  &.contain_to { /* 2 */
    &._lg { max-width: $container-lg; }
    &._md { max-width: $container-md; }
    &._sm { max-width: $container-sm; }
  }
}

