/* Margin helpers
   ========================================================================== */
/**
* Use margin helpers to keep vertical rhythm. Micro classes like this help
* maintain the intended visual look, while keeping css size and overlap low.
*
* However, _sometimes_ it's easier for long-term maintenance to extend styles
* for margin and padding in another class.
*
* Example:
* Don't do this:
*
* .myModule {
*   margin-bottom: 30px;
* }
*
* Instead, do something like this:
*
* .myClass {
*   @extend .mb3;
*   @extend .p1;
* }
*
* This will duplicate the output css
*
* .mb3 { margin-bottom: 3rem; }
* .p1 { padding: 1rem; }
* .myClass { margin-bottom: 3rem; padding: 1rem; }
*
* but it might be easier to maintain for your particular application.
*/

$margin-base: 1rem !default;

.m0   { margin-top:    0 !important;   margin-bottom: 0 !important; }
.m1   { margin-top:    $margin-base*1; margin-bottom: $margin-base*1; }
.m2   { margin-top:    $margin-base*2; margin-bottom: $margin-base*2; }
.m3   { margin-top:    $margin-base*3; margin-bottom: $margin-base*3; }
.m4   { margin-top:    $margin-base*4; margin-bottom: $margin-base*4; }

.mb0  { margin-bottom: 0 !important;   }
.mb1  { margin-bottom: $margin-base*1; }
.mb2  { margin-bottom: $margin-base*2; }
.mb3  { margin-bottom: $margin-base*3; }
.mb4  { margin-bottom: $margin-base*4; }
.mb5  { margin-bottom: $margin-base*5; }
.mb6  { margin-bottom: $margin-base*6; }
.mb7  { margin-bottom: $margin-base*7; }
.mb8  { margin-bottom: $margin-base*8; }
.mb9  { margin-bottom: $margin-base*9; }
.mb10 { margin-bottom: $margin-base*10;}

.mt0  { margin-top:    0 !important;  }
.mt1  { margin-top:    $margin-base*1; }
.mt2  { margin-top:    $margin-base*2; }
.mt3  { margin-top:    $margin-base*3; }
.mt4  { margin-top:    $margin-base*4; }

.mr0  { margin-right:  0 !important;  }
.mr1  { margin-right:  $margin-base*1; }
.mr2  { margin-right:  $margin-base*2; }
.mr3  { margin-right:  $margin-base*3; }
.mr4  { margin-right:  $margin-base*4; }

.ml0  { margin-left:   0 !important;  }
.ml1  { margin-left:   $margin-base*1; }
.ml2  { margin-left:   $margin-base*2; }
.ml3  { margin-left:   $margin-base*3; }
.ml4  { margin-left:   $margin-base*4; }


/* Padding helpers
   ========================================================================== */

$padding-base: $margin-base !default;

.p1 { padding: $padding-base*1; }
.p2 { padding: $padding-base*2; }
.p3 { padding: $padding-base*3; }
.p4 { padding: $padding-base*4; }

.pvert1  { padding-top: $padding-base*0.5;  padding-bottom: $padding-base*0.5; }
.pvert2  { padding-top: $padding-base*1;    padding-bottom: $padding-base*1;   }
.pvert3  { padding-top: $padding-base*1.5;  padding-bottom: $padding-base*1.5; }
.pvert4  { padding-top: $padding-base*2;    padding-bottom: $padding-base*2;   }

.phoriz1 { padding-left: $padding-base*0.5; padding-right:  $padding-base*0.5; }
.phoriz2 { padding-left: $padding-base*1;   padding-right:  $padding-base*1;   }
.phoriz3 { padding-left: $padding-base*1.5; padding-right:  $padding-base*1.5; }
.phoriz4 { padding-left: $padding-base*2;   padding-right:  $padding-base*2;   }