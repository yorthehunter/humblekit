/* Margin helpers
   ========================================================================== */
/**
* Use margin and padding helpers to keep vertical rhythm. Micro classes like
* this help maintain the intended design, while keeping css size low.
*
* However, _sometimes_ it's easier for long-term maintenance to extend styles
* for margin and padding in another class.
*
* Examples:
*
* Bad:
*
* .myModule {
*   margin-bottom: 30px;
* }
*
*
* Decent:
*
* .myClass {
*   @extend %mb3;
*   @extend %p1;
* }
*
* This will produce the output css:
*
* .myClass { margin-bottom: 3rem; padding: 1rem; }
*
* But necessitates the use of placeholders. However, this might be easier to
* maintain for your particular application.
*
*
* Better:
*
* <div class="myClass mb3 p1">
*   This module has my class styling, margin-bottom of 3rem, and a padding
*   of 1rem on all sides. It's obvious to the coder, and smaller in
*   file size. It's also pretty damn easy to change later.
* </div>
*/

$margin-base: 1rem !default;

.center { margin-left: auto; margin-right: auto;}

.m0   { margin-top:    0 !important;   margin-bottom: 0 !important; }
.m1   { margin-top:    $margin-base*1; margin-bottom: $margin-base*1; }
.m2   { margin-top:    $margin-base*2; margin-bottom: $margin-base*2; }
.m3   { margin-top:    $margin-base*3; margin-bottom: $margin-base*3; }
.m4   { margin-top:    $margin-base*4; margin-bottom: $margin-base*4; }

.m1px { margin: 1px; }
.m2px { margin: 2px; }
.m5px { margin: 5px; }

.mb0  { margin-bottom: 0 !important;   }
.mb1  { margin-bottom: $margin-base*1; }
.mb2  { margin-bottom: $margin-base*2; }
.mb3  { margin-bottom: $margin-base*3; }
.mb4  { margin-bottom: $margin-base*4; }
.mb5  { margin-bottom: $margin-base*5; }
.mb6  { margin-bottom: $margin-base*6; }
.mb7  { margin-bottom: $margin-base*7; }
.mb8  { margin-bottom: $margin-base*8; }
.mb9  { margin-bottom: $margin-base*9; }
.mb10 { margin-bottom: $margin-base*10;}

.mt0  { margin-top:    0 !important;  }
.mt1  { margin-top:    $margin-base*1; }
.mt2  { margin-top:    $margin-base*2; }
.mt3  { margin-top:    $margin-base*3; }
.mt4  { margin-top:    $margin-base*4; }

.mr0  { margin-right:  0 !important;  }
.mr1  { margin-right:  $margin-base*1; }
.mr2  { margin-right:  $margin-base*2; }
.mr3  { margin-right:  $margin-base*3; }
.mr4  { margin-right:  $margin-base*4; }

.ml0  { margin-left:   0 !important;  }
.ml1  { margin-left:   $margin-base*1; }
.ml2  { margin-left:   $margin-base*2; }
.ml3  { margin-left:   $margin-base*3; }
.ml4  { margin-left:   $margin-base*4; }


/* Padding helpers
   ========================================================================== */

/**
* 1. Responsive: halves vertical padding on xs (typically mobile) screens.
*/

$padding-base: $margin-base !default;

.p1 { padding: $padding-base*1; }
.p2 { padding: $padding-base*2; }
.p3 { padding: $padding-base*3; }
.p4 { padding: $padding-base*4; }

/**
* TODO:
* I have a "1/2" size: how best to show this?
* pvert1_2, pverthalf, pvert_half
*
* TODO:
* pvert and phoriz are a little unwieldy and don't necessarily match up with
* the framework conventions.
* options: .px1, .py2, .pl1, .pb3
* question: is there a reason to have padding on just one side? maybe?
*/

.pvert1_2 { padding-top: $padding-base*0.5; padding-bottom: $padding-base*0.5; }
.pvert1   { padding-top: $padding-base*1;   padding-bottom: $padding-base*1;   }
.pvert2   { padding-top: $padding-base*2;   padding-bottom: $padding-base*2;   }
.pvert3   { padding-top: $padding-base*3;   padding-bottom: $padding-base*3;   }
.pvert4   { padding-top: $padding-base*4;   padding-bottom: $padding-base*4;   }
.pvert5   { padding-top: $padding-base*5;   padding-bottom: $padding-base*5;   }
.pvert6   { padding-top: $padding-base*6;   padding-bottom: $padding-base*6;   }
.pvert7   { padding-top: $padding-base*7;   padding-bottom: $padding-base*7;   }
.pvert8   { padding-top: $padding-base*8;   padding-bottom: $padding-base*8;   }

@include at_breakpoint(ltsm) { /* 1 */
  .p1 { padding-top: $padding-base*0.5; padding-bottom: $padding-base*0.5; }
  .p2 { padding-top: $padding-base*1;   padding-bottom: $padding-base*1;   }
  .p3 { padding-top: $padding-base*1.5; padding-bottom: $padding-base*1.5; }
  .p4 { padding-top: $padding-base*2;   padding-bottom: $padding-base*2;   }
  .pvert1  { padding-top: $padding-base*0.5;  padding-bottom: $padding-base*0.5; }
  .pvert2  { padding-top: $padding-base*1;    padding-bottom: $padding-base*1;   }
  .pvert3  { padding-top: $padding-base*1.5;  padding-bottom: $padding-base*1.5; }
  .pvert4  { padding-top: $padding-base*2;    padding-bottom: $padding-base*2;   }
  .pvert5  { padding-top: $padding-base*2.5;  padding-bottom: $padding-base*2.5; }
  .pvert6  { padding-top: $padding-base*3;    padding-bottom: $padding-base*3;   }
  .pvert7  { padding-top: $padding-base*3.5;  padding-bottom: $padding-base*3.5; }
  .pvert8  { padding-top: $padding-base*4;    padding-bottom: $padding-base*4;   }
}

.phoriz1 { padding-left: $padding-base*0.5; padding-right:  $padding-base*0.5; }
.phoriz2 { padding-left: $padding-base*1;   padding-right:  $padding-base*1;   }
.phoriz3 { padding-left: $padding-base*1.5; padding-right:  $padding-base*1.5; }
.phoriz4 { padding-left: $padding-base*2;   padding-right:  $padding-base*2;   }
.phoriz5 { padding-left: $padding-base*2.5; padding-right:  $padding-base*2.5; }
.phoriz6 { padding-left: $padding-base*3;   padding-right:  $padding-base*3;   }
.phoriz7 { padding-left: $padding-base*3.5; padding-right:  $padding-base*3.5; }
.phoriz8 { padding-left: $padding-base*4;   padding-right:  $padding-base*4;   }


/* Position helpers
   ========================================================================== */
/**
* Position elements using micro classes for better control. Use top, bottom,
* left, right micro classes and margins to control the layout.
*/

.pos-abs { position: absolute; }
.pos-rel { position: relative; }
.pos-fix { position: fixed;    }

.pos-t { top: 0;    }
.pos-b { bottom: 0; }
.pos-l { left: 0;   }
.pos-r { right: 0;  }

.pos-all { top: 0; left: 0; right: 0; bottom:0; }

.z1  { z-index: 1; }
.z2  { z-index: 2; }
.z5  { z-index: 5; }
.z10 { z-index: 10; }


/* Layout utility classes
   ========================================================================== */

.full-width { width: 100%; }

.clearfix,
%clearfix {
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}


/* Responsive utilities - use with caution
   ========================================================================== */

@include at_breakpoint(xl)   { .hide_xl   { display: none; } }
@include at_breakpoint(lg)   { .hide_lg   { display: none; } }
@include at_breakpoint(ltlg) { .hide_ltlg { display: none; } }
@include at_breakpoint(md)   { .hide_md   { display: none; } }
@include at_breakpoint(ltmd) { .hide_ltmd { display: none; } }
@include at_breakpoint(sm)   { .hide_sm   { display: none; } }
@include at_breakpoint(ltsm) { .hide_ltsm { display: none; } }
@include at_breakpoint(xs)   { .hide_xs   { display: none; } }
