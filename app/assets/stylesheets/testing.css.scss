/* ==========================================================================
   Styles for testing purposes
   ========================================================================== */


.bg-grid-test {
//  &.grid { outline: 1px solid rgba(0,0,0,0.5); }
  .g {
    position: relative;

    &:before {
      content: '';
      position: absolute;
      z-index: 1;
      background-color: rgba($blue, 0.3);
      top: 1px; left: $grid-gutter; right: 0; bottom: 1px;
      display: block;
    }

    &:after {
      line-height: 2rem;
      color: darken($green,5%);
      font-size: 0.75rem;
//      content: '#{$grid-gutter}';
      position: absolute;
      z-index: 1;
      background-color: rgba(white, 0.25);
      top: 1px; left: 0; bottom: 1px;
      width: $grid-gutter;
    }
  }
//  .g > p { background-image: repeating-linear-gradient(45deg, transparent, transparent 7px, rgba(0,0,0,0.1) 7px, rgba(0,0,0,0.1) 14px); }
//  .g:nth-child(odd){ background-color: rgba($yellow,0.35); }
//  .g:nth-child(even){ background-color: rgba($blue,0.25); }
}

.bg-blueprint {
  $blueprint: $blue;

  background-color:transparent;
  background-image:
  linear-gradient(rgba($blueprint, 0.1) 1px, transparent 1px);
  background-size:1rem 1rem;
  background-position: top center;

  &.dark-version {
    background-color:$blueprint;
    background-image:
    linear-gradient(rgba(255,255,255,.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255,255,255,.05) 1px, transparent 1px);

    div, h1, h2, h3, h4, h5, h6, p, section, article, header, footer, ul, ol, dl, li, td, tr, th, label, input, fieldset, aside {
      outline: 1px solid rgba(255,255,255,0.5);
      color: #e8e9f2;
      background-color: rgba(255,255,255,0.2);
    }
  }

  div, h1, h2, h3, h4, h5, h6, p, section, article, header, footer, ul, ol, dl, li, td, tr, th, label, input, fieldset, aside {
    outline: 1px solid rgba($blueprint, 0.3);
    background-color: rgba($blueprint, 0.1);
  }
}




.helper-text {
  font-size: 11px;
  line-height: 1;
  color: gray;
  font-weight: normal;
}




.img {
  max-width: 100%;

  &.fl-r {
    margin-left: 1rem;
    margin-bottom: 1rem;
  }
  &.fl-l {
    margin-right: 1rem;
    margin-bottom: 1rem;
  }
}

.fl-r {
  float: right;
}
.fl-l {
  float: left;
}

.overflow_0 {
  overflow: hidden;
}

._scale5 {
  max-height: 5rem;
}
._scale7 {
  max-height: 7rem;
}
._scale10 {
  max-height: 10rem;
}
._scale15 {
  max-height: 15rem;
}
._scale20 {
  max-height: 20rem;
}
._scale30 {
  max-height: 30rem;
}
._scale50 {
  max-height: 30rem;
}

._scale5._sm {}

@include at_breakpoint(xs) {
  ._scale5-xs {
    max-height: 5rem;
  }
  ._scale7-xs {
    max-height: 7rem;
  }
  ._scale10-xs {
    max-height: 10rem;
  }
  ._scale15-xs {
    max-height: 15rem;
  }
  ._scale20-xs {
    max-height: 20rem;
  }
}
@include at_breakpoint(sm) {
  ._scale5-sm {
    max-height: 5rem;
  }
  ._scale7-sm {
    max-height: 7rem;
  }
  ._scale10-sm {
    max-height: 10rem;
  }
  ._scale15-sm {
    max-height: 15rem;
  }
  ._scale20-sm {
    max-height: 20rem;
  }
}
@include at_breakpoint(md) {
  ._scale5-md {
    max-height: 5rem;
  }
  ._scale7-md {
    max-height: 7rem;
  }
  ._scale10-md {
    max-height: 10rem;
  }
  ._scale15-md {
    max-height: 15rem;
  }
  ._scale20-md {
    max-height: 20rem;
  }
}


$border-xs: 1px;
$border-sm: 2px;
$border-md: 3px;
$border-lg: 5px;
$border-xl: 10px;

.bordered { border-style: solid; }

.border-xs { border-width: $border-xs; }
.border-sm { border-width: $border-sm; }
.border-md { border-width: $border-md; }
.border-lg { border-width: $border-lg; }
.border-xl { border-width: $border-xl; }


$border-radius-xs: $font-size-base / 6   !default;
$border-radius-sm: $font-size-base / 4   !default;
$border-radius-md: $font-size-base / 2   !default;
$border-radius-lg: $font-size-base       !default;
$border-radius-xl: $font-size-base * 1.5 !default;

.round-bottom {
  border-top-right-radius: 0 !important;
  border-top-left-radius:  0 !important;
}
.round-top {
  border-bottom-right-radius: 0 !important;
  border-bottom-left-radius:  0 !important;
}
.round-left {
  border-top-left-radius:    0 !important;
  border-bottom-left-radius: 0 !important;
}
.round-right {
  border-bottom-right-radius: 0 !important;
  border-top-right-radius:    0 !important;
}

.round-xs { border-radius: $border-radius-xs; }
.round-sm { border-radius: $border-radius-sm; }
.round-md { border-radius: $border-radius-md; }
.round-lg { border-radius: $border-radius-lg; }
.round-xl { border-radius: $border-radius-xl; }


.trans-on-hover {
  &:hover {
    opacity: 0.25;
  }
}


.fill-screen {
  min-height: 100%;
}