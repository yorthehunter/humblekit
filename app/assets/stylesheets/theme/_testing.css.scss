/* ==========================================================================
   Styles for testing purposes
   ========================================================================== */


.bg-grid-test {
//  &.grid { outline: 1px solid rgba(0,0,0,0.5); }
  &.container {
    outline: 1px dotted rgba($blue, 0.3);
  }

  .g {
    position: relative;
    overflow: hidden;

    &:before {
      content: '';
      position: absolute;
      z-index: 1;
      background-color: rgba($blue, 0.3);
      top: 1px; left: ($grid-gutter + 1); right: 1px; bottom: 1px;
      display: block;
      pointer-events: none;
      outline: 1px solid rgba($blue, 0.5);
    }

    &:after {
      line-height: 2rem;
      color: darken($green,5%);
      font-size: 0.75rem;
      content: '';
      position: absolute;
      z-index: 1;
      background-color: rgba(white, 0.5);
//      top: 1px; left: 0; bottom: 1px;
      width: $grid-gutter;
      pointer-events: none;
    }
  }
//  .g > p { background-image: repeating-linear-gradient(45deg, transparent, transparent 7px, rgba(0,0,0,0.1) 7px, rgba(0,0,0,0.1) 14px); }
//  .g:nth-child(odd){ background-color: rgba($yellow,0.35); }
//  .g:nth-child(even){ background-color: rgba($blue,0.25); }
}

.bg-blueprint {
  $blueprint: $blue;

  background-color:transparent !important;
  background-image:
  linear-gradient(rgba($blueprint, 0.1) 1px, transparent 1px) !important;
  background-size:1rem 1rem !important;
  background-position: top center !important;

  div, h1, h2, h3, h4, h5, h6, p, section, article, header, footer, ul, ol, dl, li, td, tr, th, label, input, fieldset, aside {
    outline: 1px solid rgba($blueprint, 0.3);
    background-color: rgba($blueprint, 0.1);
    background-image: linear-gradient(rgba($blueprint, 0.1) 1px, transparent 1px) !important;
    background-size: 1rem 1rem !important;
    background-position: top center !important;
  }
}





.img {
  max-width: 100%;

  &.right {
    margin-left: 1rem;
    margin-bottom: 1rem;
  }
  &.left {
    margin-right: 1rem;
    margin-bottom: 1rem;
  }
}

.overflow-none {
  overflow: hidden;
}

.scale1 {
  max-height: 1rem;
}
.scale2 {
  max-height: 2rem;
}
.scale3 {
  max-height: 3rem;
}
.scale5 {
  max-height: 5rem;
}
.scale7 {
  max-height: 7rem;
}
.scale10 {
  max-height: 10rem;
}
.scale15 {
  max-height: 15rem;
}
.scale20 {
  max-height: 20rem;
}
.scale30 {
  max-height: 30rem;
}
.scale50 {
  max-height: 30rem;
}

@include at_breakpoint(xs) {
  .scale5-xs {
    max-height: 5rem;
  }
  .scale7-xs {
    max-height: 7rem;
  }
  .scale10-xs {
    max-height: 10rem;
  }
  .scale15-xs {
    max-height: 15rem;
  }
  .scale20-xs {
    max-height: 20rem;
  }
}
@include at_breakpoint(sm) {
  .scale5-sm {
    max-height: 5rem;
  }
  .scale7-sm {
    max-height: 7rem;
  }
  .scale10-sm {
    max-height: 10rem;
  }
  .scale15-sm {
    max-height: 15rem;
  }
  .scale20-sm {
    max-height: 20rem;
  }
}
@include at_breakpoint(md) {
  .scale5-md {
    max-height: 5rem;
  }
  .scale7-md {
    max-height: 7rem;
  }
  .scale10-md {
    max-height: 10rem;
  }
  .scale15-md {
    max-height: 15rem;
  }
  .scale20-md {
    max-height: 20rem;
  }
}


.trans-on-hover {
  &:hover {
    opacity: 0.25;
  }
}


.fill-screen {
  min-height: 100%;
}


.contain-all {
  display: table;
  height: 100%;
  min-height: 100%;
  position: relative;
  overflow: hidden;
  width: 100%;
}
.contain-wrapper {
  top: 50%;
  display: table-cell;
  vertical-align: middle;
  width: 100%;
  position: static;
}

.contain-center {
  position: relative;
  top: -50%;
}

pre, code {
  font-family: $font-family-monospace;
}


/* Code blocks */
pre[class*="language-"] {
  margin: 0;
  padding: 1rem;
}

code {
  font-size: 1.25rem;
  line-height: 2rem;
  background-color: rgba(255, 255, 255, 0.25);
  padding: 0.25rem;
  color: $tomato;
}

//
//@include at_breakpoint(ltxl) {
//  .bg-grid-test {
//    position: relative;
//
//    &:before {
//      @extend .fa !optional;
//      color: rgba($blue, 0.5);
//      position: absolute;
//      left: 0;
//      top: -1rem;
//      content: "xl container";
//    }
//  }
//}


.bg-stretch {
  background-position: center center;
  background-attachment: fixed;
//  background-size: 100%;
//  -webkit-background-size: 100%;
}

$ghost-white-light: rgba(white,0.1);
$ghost-white-base:  rgba(white,0.25);
$ghost-white-dark:  rgba(white,0.5);
$ghost-black-base:  rgba(black,0.25);
$ghost-black-dark:  rgba(black,0.5);

.bg-ghost {
  background-color: $ghost-white-base;
  border: 1px solid $ghost-white-dark;
  color: white;
  text-shadow: 0 1px 2px $ghost-black-dark;
}

.light-shaded {
  color: white;
  text-shadow: 0 1px 2px $ghost-black-dark;
}

.text-trans-semi {
  color: $ghost-black-dark;
}

.btn-outline {
  font-weight: $font-weight-base;
  border-width: 2px;
  background-color: transparent;
  border-color: $ghost-white-dark;
  color: $ghost-white-dark;

  &:hover {
    background-color: $ghost-white-base;
    border-color: white;
    color: white;
  }
}

.btn-outline {

}


.logo {
  display: inline-block;

  &:hover {
    .logo-overlay {
      opacity: 1;

      &:after {
        content: "yorthehunter.github.io";
        text-align: center;
        color: white;
        font-size: 12px;
        display: block;
      }
    }
  }
  
  .logo-overlay {
    -webkit-transition: opacity 0.2s;-moz-transition: opacity 0.2s;-ms-transition: opacity 0.2s;-o-transition: opacity 0.2s;transition: opacity 0.2s;
    opacity: 0;
  }
}

blockquote {
  @extend %f-md;
  @extend %pyhalf;
  @extend %px1;
  @extend %border-l;
  @extend %border-lg;
  @extend %border-gray-light;
  @extend %light;
  padding-left: 1rem;
  background-color: $gray-lightest;
}