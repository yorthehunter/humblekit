%section.example
  %header
    %h3.h4.thin A bit about Mixins
  %p These mixins are used by other parts of the framework to generate bits of the final CSS. They're exposed here if you are interested in learning more about what's happening behind the scenes. If you want to know even more, check out the source code for more documentation.

%hr
%section.example
  %header
    %h3.h4.thin at_breakpoint

    %h4.h5 Example Usage:
    %pre.mb1
      %code
        :preserve
          @include at_breakpoint(xs);
    %pre.mb1
      :preserve
        returns:
        @media screen and (max-width: 480px; ) {
          content;
        }

    %pre.line-numbers
      %code.language-scss
        :preserve
          @mixin at_breakpoint($media) {
            @if $media == xs {
              @media screen and (max-width: $media-width-xs) {
                @content; 
              }
            } @else if $media == sm {
              @media screen and (max-width: $media-width-sm) and (min-width: ($media-width-xs + 1)) {
                @content;
              }
            } @else if $media == md {
              @media screen and (max-width: $media-width-md) and (min-width: ($media-width-sm + 1)) {
                @content;
              }
            } @else if $media == lg {
              @media screen and (max-width: $media-width-lg) and (min-width: ($media-width-md + 1)) {
                @content;
              }
            } @else if $media == xl {
              @media screen and (min-width: ($media-width-lg + 1)) {
                @content;
              }
            } @else if $media == ltxl {
              @media screen and (max-width: ($media-width-xl)) {
                @content
              }
            } @else if $media == ltlg {
              @media screen and (max-width: ($media-width-lg)) {
                @content
              }
            } @else if $media == ltmd {
              @media screen and (max-width: ($media-width-md)) {
                @content
              }
            } @else if $media == ltsm {
              @media screen and (max-width: ($media-width-sm)) {
                @content
              }
            } @else if $media == gtxs {
              @media screen and (min-width: ($media-width-xs + 1)) {
                @content
              }
            } @else if $media == gtsm {
              @media screen and (min-width: ($media-width-sm + 1)) {
                @content
              }
            }
          }

%hr
%section.example
  %header
    %h3.h4.thin exponent function

    %h4.h5 Example Usage:
    %pre.mb1
      %code
        :preserve
          line-height { exponent(1.2, 16); }
    %pre.mb1
      :preserve
        returns:
          line-height { 2.0736; }

    %pre.line-numbers
      %code.language-scss
        :preserve
          @function exponent($base, $exponent) {
            $value: $base;
            @if $exponent > 1 {
              @for $i from 2 through $exponent {
                $value: $value * $base; } }
            @if $exponent < 1 {
              @for $i from 0 through -$exponent {
                $value: $value / $base; } }
            @return $value;
          }

%hr
%section.example
  %header
    %h3.h4.thin size_and_line

    %h4.h5 Example Usage:
    %pre.mb1
      %code
        :preserve
          @include size_and_line(7, rem);
    %pre.mb1
      :preserve
        returns:
          font-size: 4.50767rem;
          margin-bottom: 4rem;
          line-height: 5rem;

    %pre.line-numbers
      %code.language-scss
        :preserve
          @mixin size_and_line($size, $unit, $margin:ceil($size / 2)) {
            $truesize: exponent($type-ratio, $size);

            font-size:   $truesize * 1#{$unit};
            margin-bottom: #{$margin}rem;

            @if $unit == "px" {
              line-height: ceil($truesize / $font-size-base) * 1rem;
            }
            @else if $unit == "rem" {
              line-height: ceil($truesize) * 1rem;
            }

            @if $letter-spacing-adjustment {
              letter-spacing: -($truesize / 100 * 1#{$unit});
            }
          }