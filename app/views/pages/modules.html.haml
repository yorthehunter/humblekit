%header.text-c.skin-grape.py8
  .container
    %h1.f-xl.thin.dark.mb4 Modules
    %h2.h2.thin
      Reusable interface patterns
    %aside
      %a.btn.btn-sm.btn-skin{ href: "/styleguide/modules.html" } Modules in the Style Guide »

%article.m4
  .container.contain-to-sm
    %header
      %h3.h4.text-c SASS file structure
    %pre.language-
      %code.language-
        :preserve
          stylesheets
          └── modules
              |
              ├── _media.css.scss
              └── _buttons.css.scss

- sections = [["buttons","Buttons are highly customizable through SASS variables"],
              ["media", "The media object: hero and content, together at last"]]
- sections.each do |section, description|
  %article.mb2
    %header.bg-gray-lightest
      .container.contain-to-md
        %h1.f-xl.color-gray-light.m0= section
    %aside.bg-gray-light.mb2.py1
      .container.contain-to-md
        %aside.ml1.right
          %a.btn.btn-xs.btn-secondary{ href: "##{section}_examples", data: { toggle: "collapse" } }
            Examples
            %span.fa.fa-caret-down
        %p.light.mb0= description
    %section.collapse.examples.mb8{ id: "#{section}_examples"}
      .container.contain-to-md
        = render "pages/examples/#{section}_examples"

%article.mb2
  %header.bg-gray-lightest.border-b.border-xl.border-gray-light
    .container.contain-to-md
      %h1.f-xl.color-gray-light.m0 what else?
  %section.examples.mt2.mb4
    .container.contain-to-md
      %p
        The
        %strong Modules
        directory should house all of the reusable styled components of your application (i.e. your UI). If you find yourself building the same module over and over, consider adding a file _my_module.css.scss. You eventually may have many, many others as well, like _nav.css.scss, _tabs.css.scss, _pagination.css.scss, etc. This will be the meat of your application.
      %p I made conscious decision to keep the framework limited in scope and lacking any prescribed design. It's pretty generic and I like it like that.
      %p
        %strong The form follows the function.