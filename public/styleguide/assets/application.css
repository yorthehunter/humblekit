@charset "UTF-8";
/* Custom variables - redefine variable defaults as you see fit
   ========================================================================== */
/* Base - styles and settings needed for all projects.
   ========================================================================== */
/* ==========================================================================
   Global variables
   ========================================================================== */
/**
* These variables are needed for almost all parts of this project, so they
* are always included.
*/
/* Custom breakpoints
   ========================================================================== */
/**
* These variables represent the max-width of a size break.
*
* Divvy these up however you want, but—by default—we're looking at something
* like mobile (xs), tablet (sm), smaller/laptop (md), big lap/small monitor (lg),
* standard monitor (xl).
*
* Feel free to customize these size breaks and/or rename and replace these
* variable names.
*/
/* Padding
   ========================================================================== */
/**
* Multi-purpose, generic padding schema.
*
* TODO: do i need to do this?
*/
/* Typography
   ========================================================================== */
/**
* 1. The base font size of the site. This variable controls the basis of the
*    vertical rhythm of the site. Since everything's in rems, the rem will size
*    off of this number exactly.
*
*    So what's awesome about this? You now have complete control over a very
*    powerful unit of math that controls your entire site. Congratulations!
*
*    Padding and margins are set in rems (by default) as is the entire typography
*    scale of the site, so all you need to do is modify this just a bit to get
*    a totally new scale.
*
* 2. Modular scale ratio: This system makes use of math (oy, vey...) to create
*    sequential, relational type in a scale. Basically, it's a simple way to
*    get good-looking type sizes using only a couple of variables.
*
*    Reading: http://alistapart.com/article/more-meaningful-typography
*    Practice: http://modularscale.com/
*
*    $type-ratio is a number or fraction that defines our exponential scale.
*    Even minor changes can make a noticeable impact on your type scale. Don't
*    worry though: the vertical rhythm is calculated and will accept any
*    changes in scale and adapt. See _mixins.css.scss for more info.
*/
/* 1 */
/* 2 */
/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)

   Modified by Brian Cleveland (@yorthehunter)
*/
@import url(fontawesome/css/font-awesome.css);
@import url(prism/themes/prism.css);
html, body {
  height: 100%; }

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  vertical-align: baseline;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

img {
  display: block; }

/* ==========================================================================
   Global Mixins
   ========================================================================== */
/**
* These mixins are needed for almost all parts of this project, so they are
* always included.
*/
/* Media breakpoint, super-simple version
   ========================================================================== */
/**
* 1. Sass magic that lets us pass content to the mixin. More reading:
*    http://krasimirtsonev.com/blog/article/SASS-content-directive-is-a-wonderful-thing
*/
/* Returns exponent
   ========================================================================== */
/**
* 1. Reset value
* 2. Positive integers get multiplied
* 3. Negative integers get divided. A number divided by itself is 1
* 4. Return the last value written
*/
/* Font size and line height mixin
   ========================================================================== */
/**
* 1. Multiply by 1 unit (e.g. rem) to get the size in units
* 2. Do a little math and round it to get a pleasant and scalable line height.
*    This is a necessity for rem-based, beautiful vertical rhythm. At least, it
*    is for this system.
* 3. Optional: For aesthetics, adjust letter-space to -1% of font size.
*/
/* Fontawesome - I'm using fontawesome for icons. Big whoop. Wanna fight about it?
   ========================================================================== */
/* Prism - code syntax library, 'cause i'ma be codin' all up in here.
   ========================================================================== */
/* Typography - everything typography-related
   ========================================================================== */
/* ==========================================================================
   Typography
   ========================================================================== */
/* Basic font variables
   ========================================================================== */
/**
* 1. Optional: User font family definition. Add a font or fonts as a variable
*    and it will be injected into the site font family (serif or sans).
* 2. $font-family-base defines which style of font (defined before) to use as
*    default for the site. $font-family-sans-serif by default.
* 3. Default color for text. If using dark on light, avoid solid black (#000).
*    This is just good practice and looks nicer, too.
* 4. Some variables for <small> text. Accepts a size and a unit.
*/
/* 1 */
/* 2 */
/* 3 */
/* 4 */
/* Headings variables
   ========================================================================== */
/* Font size variables
   ========================================================================== */
/**
* I choose not to use classes or variables with the greek naming convention
* (i.e. ".alpha, $beta, etc.")
* I find it easier not to have to learn new languages (however common) nor
* have to think about (however briefly) a class and its implication.
*
* In this numerical naming convention, it's easier to associate lower
* numbers with larger text, simply because that convention is already in
* place with heading markup (h1 - h6).
*
* Also included here are a few more font sizes with the sm, md, lg
* naming convention.
*
* 1. Expressed as progressive steps in scale (as integers). See
*    _variables.css.scss for more information.
*    Basically, the type grows (or shrinks) from a base font size variable
*    at a rate that is exponential according to the integers below.
*    If this makes no sense, it might be easier to try changing these numbers,
*    the $font-size-base, or the $type-ratio and seeing the results in your
*    application. Tweak them to get something that works for you.
*/
/* 1 */
/* Typography basics
   ========================================================================== */
/**
* 1. This line sets up our rem size for the site. We set it up as the
*    $font-size-base so we can keep tight control over the font sizes and
*    vertical rhythm.
*    You can test out what a change to this number looks like by changing it
*    to, oh say, 30px and refreshing the page. Everything will scale up
*    drastically because everything in this app is rem-based :}
*/
html, body {
  font-size: 16px; }

/* 1 */
body {
  line-height: 1rem;
  font-family: "Source Sans Pro", "Helvetica Neue", Helvetica, sans-serif;
  font-weight: 400;
  color: #444444; }

strong {
  font-weight: 700; }

em {
  font-style: italic; }

/* Font size placeholders
   ========================================================================== */
/**
* @extend these placeholders in modules to give a component a specific font size.
*/
h1, .h1 {
  font-size: 4.50767rem;
  /* 1 */
  margin-bottom: 4rem;
  line-height: 5rem;
  /* 2 */
  letter-spacing: -0.04508rem;
  /* 3 */ }

h2, .h2 {
  font-size: 2.93163rem;
  /* 1 */
  margin-bottom: 3rem;
  line-height: 3rem;
  /* 2 */
  letter-spacing: -0.02932rem;
  /* 3 */ }

h3, .h3 {
  font-size: 2.36421rem;
  /* 1 */
  margin-bottom: 2rem;
  line-height: 3rem;
  /* 2 */
  letter-spacing: -0.02364rem;
  /* 3 */ }

h4, .h4 {
  font-size: 1.90662rem;
  /* 1 */
  margin-bottom: 2rem;
  line-height: 2rem;
  /* 2 */
  letter-spacing: -0.01907rem;
  /* 3 */ }

h5, .h5,
p, .p,
dl, ol, ul {
  font-size: 1.24rem;
  /* 1 */
  margin-bottom: 1rem;
  line-height: 2rem;
  /* 2 */
  letter-spacing: -0.0124rem;
  /* 3 */ }

h6, .h6, .tooltip {
  font-size: 1rem;
  /* 1 */
  margin-bottom: 0rem;
  line-height: 1rem;
  /* 2 */
  letter-spacing: -0.01rem;
  /* 3 */ }

/* Headings and paragraphs
   ========================================================================== */
/**
* Headings are given some default styling to give them a typographical
* hierarchy. There is more than one school of thought when using headings in
* markup. See this example:
*
* <header>
*   <h1>This is a giant header</h1>
* </header>
*
* Your output is dependent on the styles given to h1{}. If you would rather
* present your h1 as a smaller font, maybe more like an h2, then your markup
* could look like this:
*
* <header>
*   <h1 class="h2">This is a moderately big header.</h1>
* </header>
*
* Semantically, you are saying "this heading is as important as an h1, but
* should present itself as an h2".
*
* Despite being a semantically correct and easily identifiable solution, it
* doesn't always sit well in a shared development environment.
* Therefore:
*
* <header>
*   <h2>This is a moderately big header, too.</h2>
* </header>
*
* The code above works, but doesn't say as much semantically. YMMV.
*
* 1. The .p class can be used to describe paragraph text when an actual <p>
*    isn't used. E.g. <div class="p">Text goes here.</div>
* 2. The last paragraph in a group of paragraphs (or single paragraph) will not
*    have a margin below it. The complicated "not" selector will ignore this
*    declaration for the margin-bottom (.mbN) classes, allowing the margin-bottom
*    to instead by managed by the class.
*    We use the :not selector because the last-of-type selector, when attached
*    to the <p> or .p, is more specific than the .mbN class.
*    Note: this is personal preference. Delete if you want.
*/
h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6 {
  font-weight: 700;
  color: inherit;
  text-rendering: optimizeLegibility; }

p:last-of-type:not([class^="mb"]), .p:last-of-type:not([class^="mb"]) {
  /* 2 */
  margin-bottom: 0; }

.f-xl {
  font-size: 10.65709rem;
  /* 1 */
  margin-bottom: 6rem;
  line-height: 11rem;
  /* 2 */
  letter-spacing: -0.10657rem;
  /* 3 */ }

.f-lg {
  font-size: 6.93099rem;
  /* 1 */
  margin-bottom: 5rem;
  line-height: 7rem;
  /* 2 */
  letter-spacing: -0.06931rem;
  /* 3 */ }

form,
.form, input:not([type="submit"]):not([type="file"]):not([type="radio"]):not([type="checkbox"]):not([type="button"]):not([type="reset"]),
select,
textarea,
.f-md {
  font-size: 1.24rem;
  /* 1 */
  margin-bottom: 1rem;
  line-height: 2rem;
  /* 2 */
  letter-spacing: -0.0124rem;
  /* 3 */ }

.f-sm {
  font-size: 0.65036rem;
  /* 1 */
  margin-bottom: -1rem;
  line-height: 1rem;
  /* 2 */
  letter-spacing: -0.0065rem;
  /* 3 */ }

.f-xs {
  font-size: 0.52449rem;
  /* 1 */
  margin-bottom: -1rem;
  line-height: 1rem;
  /* 2 */
  letter-spacing: -0.00524rem;
  /* 3 */ }

/* Helper classes
   ========================================================================== */
/**
* A note about placeholders:
*
* Why include placeholders along with classes? Why not just use one or the other?
* Because there are cases to be made for each at different times.
* It's sometimes less meaningful to use a class (or @extend a placeholder).
* I've found cases for both in all of my projects, so I am proactively trying
* to create placeholders for classes that I *may* later want to @extend.
* If this makes no sense, please feel free to ignore and do what you please :}
*
* Oh, by the way: placeholders do not compile on their own, so there's no need
* to worry about bloating your code. However, classes DO compile, whether you
* use them or not, so stay cautious, friends.
*
* 1. I decided I liked this enough to put it in. <sub> and <sup> now have life.
*    Based on this: https://gist.github.com/unruthless/413930
*
* 2. Line height helpers: This seems a little over-the-top-micro-managey, but
*    since I've come across times where this is particularly useful, I've
*    included a few helpful classes. It's worth it, I think.
*/
.u {
  text-decoration: underline; }

sub, sup {
  /* 1 */
  font-size: 65%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5rem; }

sub {
  bottom: -0.25rem; }

small,
.small {
  font-size: 65%;
  line-height: 1; }

.text-l {
  text-align: left   !important; }

.text-c {
  text-align: center !important; }

.text-r {
  text-align: right  !important; }

.light {
  color: #989898; }

.dark {
  color: black; }

.tooltip,
.thin {
  font-weight: 100; }

.thick {
  font-weight: 700; }

.line1 {
  line-height: 1rem !important; }

/* 2 */
.line2 {
  line-height: 2rem !important; }

.line3 {
  line-height: 3rem !important; }

.line4 {
  line-height: 4rem !important; }

/* Responsive text
   ========================================================================== */
/**
* .h1, .h2, .h3, .h4, and .p classes can react responsively to change the
* font-size at breakpoints. This will scale down font sizes for smaller
* devices for better readability.
*/
@media screen and (max-width: 992px) {
  .f-xl {
    font-size: 6.93099rem;
    /* 1 */
    margin-bottom: 5rem;
    line-height: 7rem;
    /* 2 */
    letter-spacing: -0.06931rem;
    /* 3 */ }

  .f-lg {
    font-size: 4.50767rem;
    /* 1 */
    margin-bottom: 4rem;
    line-height: 5rem;
    /* 2 */
    letter-spacing: -0.04508rem;
    /* 3 */ }

  .h1 {
    font-size: 3.63522rem;
    /* 1 */
    margin-bottom: 3rem;
    line-height: 4rem;
    /* 2 */
    letter-spacing: -0.03635rem;
    /* 3 */ }

  .h2 {
    font-size: 2.36421rem;
    /* 1 */
    margin-bottom: 2rem;
    line-height: 3rem;
    /* 2 */
    letter-spacing: -0.02364rem;
    /* 3 */ }

  .h3 {
    font-size: 1.90662rem;
    /* 1 */
    margin-bottom: 2rem;
    line-height: 2rem;
    /* 2 */
    letter-spacing: -0.01907rem;
    /* 3 */ } }
@media screen and (max-width: 768px) {
  .f-lg, .f-xl {
    font-size: 3.63522rem;
    /* 1 */
    margin-bottom: 3rem;
    line-height: 4rem;
    /* 2 */
    letter-spacing: -0.03635rem;
    /* 3 */ }

  .h1 {
    font-size: 2.93163rem;
    /* 1 */
    margin-bottom: 3rem;
    line-height: 3rem;
    /* 2 */
    letter-spacing: -0.02932rem;
    /* 3 */ }

  .h2 {
    font-size: 1.90662rem;
    /* 1 */
    margin-bottom: 2rem;
    line-height: 2rem;
    /* 2 */
    letter-spacing: -0.01907rem;
    /* 3 */ }

  .h3, .p, .h4 {
    font-size: 1.5376rem;
    /* 1 */
    margin-bottom: 1rem;
    line-height: 2rem;
    /* 2 */
    letter-spacing: -0.01538rem;
    /* 3 */ } }
/**
* Some utility classes for forcing the alignment of text responsively.
* A basic example is using centered text for impact at a larger scale. This
* may not visually work as well on a small screen, so we would include a
* class that would align the text to the left.
*
* Note: This may seem a little over-prescriptive for a utility kit like this,
* but again, this is something I've used in most projects on which I've worked.
*
* <h1 class="h1 text-c text-l-xs">
*   This Heading will Align Center by Default, and Left on xs Screens
* </h1>
*/
@media screen and (max-width: 480px) {
  .text-l-xs {
    text-align: left   !important;
    float: none !important; }

  .text-c-xs {
    text-align: center !important;
    float: none !important; }

  .text-r-xs {
    text-align: right  !important;
    float: none !important; }

  /* 1 */ }
/* Elementary - fundamental styling for commonly-used tags
   ========================================================================== */
/**
* Standalones. Don't like it? Leave it out.
*/
a {
  color: #3874b5;
  text-decoration: none;
  -webkit-transition: color, 200ms;
  -moz-transition: color, 200ms;
  -ms-transition: color, 200ms;
  -o-transition: color, 200ms;
  transition: color, 200ms; }
  a:visited {
    color: #3874b5; }
  a.light {
    color: #77abc9; }
    a.light:visited {
      color: #77abc9; }
    a.light:hover {
      color: #d4e6f0; }
    a.light:active {
      color: #77abc9; }
  a.link-white {
    color: white; }
    a.link-white:visited, a.link-white:hover, a.link-white:active {
      color: white; }
  a:hover {
    color: #77abc9; }
  a:active {
    color: #3874b5; }

/* Basic list styling */
ul,
ol {
  padding-left: 1.5em;
  margin-top: 0; }
  ul ul,
  ul ol,
  ol ul,
  ol ol {
    margin-bottom: 0; }

li {
  margin-bottom: 1rem; }

dl {
  margin-top: 0;
  margin-bottom: 1rem; }

dt {
  font-weight: bold; }

dd {
  margin-left: 0;
  margin-bottom: 2rem; }

dl > dd:last-child {
  margin-bottom: 0; }

/* List utility classes - extends ul, ol, dl */
.list-unstyled {
  padding-left: 0;
  list-style: none; }

.list-inline {
  padding-left: 0; }
  .list-inline > li {
    display: inline-block;
    padding-left: 0.25rem;
    padding-right: 0.25rem; }
  @media screen and (max-width: 480px) {
    .list-inline.list-nav {
      /* 1 */ }
      .list-inline.list-nav > li {
        display: block;
        width: 100%;
        text-align: left;
        padding-left: 0;
        padding-right: 0; } }

.table,
table {
  border-collapse: collapse;
  border-spacing: 0;
  font-size: 16px;
  line-height: 16px;
  max-width: 100%;
  overflow-y: auto; }
  @media screen and (max-width: 768px) {
    .table,
    table {
      display: block;
      position: relative;
      display: -webkit-box;
      overflow-x: auto; } }
  .table.table-full,
  table.table-full {
    width: 100%; }

thead th {
  border-bottom: 2px solid rgba(0, 0, 0, 0.1);
  vertical-align: bottom;
  line-height: 14px; }

tfoot td {
  line-height: 16px;
  border-bottom: 0; }

th {
  text-align: left;
  font-weight: 700; }

td,
th {
  padding: 1rem 1rem;
  line-height: 15px;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1); }

td {
  vertical-align: top; }

tfoot td {
  background-color: transparent; }

.table-condensed td,
.table-condensed th {
  padding: 0.5rem 0.5rem; }

.table-bordered td,
.table-bordered th {
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-top: none;
  line-height: 15px; }
.table-bordered thead th {
  border: 1px solid rgba(0, 0, 0, 0.1);
  line-height: 14px; }

.table-striped tr:nth-child(odd) td {
  background-color: #f0f0f0; }
.table-striped.table-striped-dark tr:nth-child(odd) td {
  background-color: rgba(255, 255, 255, 0.1); }
.table-striped tfoot tr:nth-child(odd) td {
  background-color: transparent; }

.table-hover tr:hover td {
  background-color: #e7e7e7; }

.table-hover-dark tr:hover td {
  background-color: rgba(255, 255, 255, 0.2); }

.table-hover tfoot tr:hover td,
.table-hover-dark tfoot tr:hover td {
  background-color: transparent; }

/* Forms
   ========================================================================== */
fieldset,
button {
  padding: 0;
  margin: 0;
  border: none; }

label {
  font-size: 1.24rem;
  /* 1 */
  margin-bottom: 0rem;
  line-height: 2rem;
  /* 2 */
  letter-spacing: -0.0124rem;
  /* 3 */
  margin-right: 0.5rem;
  display: inline-block;
  vertical-align: top;
  cursor: pointer; }

textarea {
  min-height: 5rem;
  vertical-align: top; }

input:not([type="submit"]):not([type="file"]):not([type="radio"]):not([type="checkbox"]):not([type="button"]):not([type="reset"]),
select,
textarea {
  margin: 0 1rem 1rem 0;
  color: #444444;
  padding: 0.5rem 0.25rem;
  background-color: #f0f0f0;
  border: 1px solid #afa9af;
  max-height: 3rem;
  box-sizing: border-box;
  font-family: "Source Sans Pro", "Helvetica Neue", Helvetica, sans-serif;
  vertical-align: top; }
  input:not([type="submit"]):not([type="file"]):not([type="radio"]):not([type="checkbox"]):not([type="button"]):not([type="reset"]):focus,
  select:focus,
  textarea:focus {
    background-color: white;
    outline: none;
    box-shadow: 0 0 6px 1px rgba(18, 107, 173, 0.5); }

select {
  height: 3rem; }

.checkbox,
input[type="checkbox"],
.radio,
input[type="radio"] {
  display: inline-block;
  margin-right: 0.25rem;
  font-size: 1em; }

.form-stacked input:not([type="submit"]):not([type="file"]):not([type="radio"]):not([type="checkbox"]):not([type="button"]):not([type="reset"]),
.form-stacked select,
.form-stacked textarea {
  margin: 0;
  width: 100%; }

input[disabled],
select[disabled],
input:disabled,
select:disabled,
.disabled {
  opacity: 0.65;
  cursor: not-allowed;
  background-color: rgba(240, 240, 240, 0.5) !important;
  color: rgba(68, 68, 68, 0.5) !important; }

/* Structure - Helpers that manage the layout and vertical rhythm of a site.
   ========================================================================== */
/**
* These will be the most invasive classes for your markup for a good reason:
* You want to be able to glance at the markup and get an idea of what the
* layout will be. I have no problem creating many classes to help structure
* a site. If you make fundamental changes to your structure later, you will
* be making markup changes anyway, right?
*/
/* Layout variables
   ========================================================================== */
/* Margin helpers
   ========================================================================== */
/**
* Use margin and padding helpers to keep vertical rhythm. Micro classes like
* this help maintain the intended design, while keeping css size low.
*
* However, _sometimes_ it's easier for long-term maintenance to extend styles
* for margin and padding in another class.
*
* Examples:
*
* Bad:
*
* .myModule {
*   margin-bottom: 30px;
* }
*
*
* Decent:
*
* .myClass {
*   @extend %mb3;
*   @extend %p1;
* }
*
* This will produce the output css:
*
* .myClass { margin-bottom: 3rem; padding: 1rem; }
*
* But necessitates the use of placeholders. However, this might be easier to
* maintain for your particular application.
*
*
* Better:
*
* <div class="myClass mb3 p1">
*   This module has my class styling, margin-bottom of 3rem, and a padding
*   of 1rem on all sides. It's obvious to the coder, and smaller in
*   file size. It's also pretty damn easy to change later.
* </div>
*/
.center {
  margin-left: auto;
  margin-right: auto; }

.m0 {
  margin-top: 0 !important;
  margin-bottom: 0 !important; }

.m1 {
  margin-top: 1rem;
  margin-bottom: 1rem; }

.m2 {
  margin-top: 2rem;
  margin-bottom: 2rem; }

.m3 {
  margin-top: 3rem;
  margin-bottom: 3rem; }

.m4 {
  margin-top: 4rem;
  margin-bottom: 4rem; }

.mb0 {
  margin-bottom: 0 !important; }

.mb1 {
  margin-bottom: 1rem; }

.mb2 {
  margin-bottom: 2rem; }

.mb4 {
  margin-bottom: 4rem; }

.mb8 {
  margin-bottom: 8rem; }

.mt0 {
  margin-top: 0 !important; }

.mt1 {
  margin-top: 1rem; }

.mt2 {
  margin-top: 2rem; }

.mt3 {
  margin-top: 3rem; }

.mt4 {
  margin-top: 4rem; }

.mr0 {
  margin-right: 0 !important; }

.mr1 {
  margin-right: 1rem; }

.mr2 {
  margin-right: 2rem; }

.mr3 {
  margin-right: 3rem; }

.mr4 {
  margin-right: 4rem; }

.ml0 {
  margin-left: 0 !important; }

.ml1 {
  margin-left: 1rem; }

.ml2 {
  margin-left: 2rem; }

.ml3 {
  margin-left: 3rem; }

.ml4 {
  margin-left: 4rem; }

.m-xs {
  margin: 1px; }

.m-sm {
  margin: 3px; }

.m-md {
  margin: 5px; }

.m-lg {
  margin: 8px; }

.m-xl {
  margin: 12px; }

/* Padding helpers
   ========================================================================== */
/**
* 1. Use the same base as margin does (1 rem by default)
*/
/* 1 */
.p1 {
  padding: 1rem; }

.p2 {
  padding: 2rem; }

.p3 {
  padding: 3rem; }

.p4 {
  padding: 4rem; }

.pyhalf {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem; }

.py1 {
  padding-top: 1rem;
  padding-bottom: 1rem; }

.py2 {
  padding-top: 2rem;
  padding-bottom: 2rem; }

.py4 {
  padding-top: 4rem;
  padding-bottom: 4rem; }

.py8 {
  padding-top: 8rem;
  padding-bottom: 8rem; }

.pxhalf {
  padding-left: 0.25rem;
  padding-right: 0.25rem; }

.px1 {
  padding-left: 0.5rem;
  padding-right: 0.5rem; }

.px2 {
  padding-left: 1rem;
  padding-right: 1rem; }

.px4 {
  padding-left: 2rem;
  padding-right: 2rem; }

.px8 {
  padding-left: 4rem;
  padding-right: 4rem; }

/* Responsive padding: halves vertical padding on xs (typically mobile) screens.*/
@media screen and (max-width: 768px) {
  .p1 {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem; }

  .p2 {
    padding-top: 1rem;
    padding-bottom: 1rem; }

  .p3 {
    padding-top: 1.5rem;
    padding-bottom: 1.5rem; }

  .p4 {
    padding-top: 2rem;
    padding-bottom: 2rem; }

  .py1 {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem; }

  .py2 {
    padding-top: 1rem;
    padding-bottom: 1rem; }

  .py4 {
    padding-top: 2rem;
    padding-bottom: 2rem; }

  .py8 {
    padding-top: 4rem;
    padding-bottom: 4rem; } }
/* Position helpers
   ========================================================================== */
/**
* Position elements using micro classes for better control. Use top, bottom,
* left, right micro-classes and margins to control the layout.
*/
.pos-abs {
  position: absolute; }

.pos-rel {
  position: relative; }

.pos-fix {
  position: fixed; }

.pos-t {
  top: 0; }

.pos-b {
  bottom: 0; }

.pos-l {
  left: 0; }

.pos-r {
  right: 0; }

.pos-all {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0; }

.z1 {
  z-index: 1; }

.z2 {
  z-index: 2; }

.z5 {
  z-index: 5; }

.z10 {
  z-index: 10; }

/* Horizontal rule
   ========================================================================== */
/**
* 1. To keep vertical rhythm, hr uses font-size-base as a height (including
*    1px for the border.
*/
hr,
.hr,
.dropdown-menu .divider {
  border: none;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  height: 15px;
  /* 1 */
  margin-top: 0;
  margin-bottom: 1rem; }

/* Layout utility classes
   ========================================================================== */
.full-width {
  width: 100%; }

.clearfix:before, .clearfix:after,
.container:before,
.modal-footer:before,
.container:after,
.modal-footer:after {
  content: " ";
  display: table; }
.clearfix:after,
.container:after,
.modal-footer:after {
  clear: both; }

/* This class will hide content, even from screen readers. */
.hidden {
  display: none !important; }

.right {
  float: right; }

.left {
  float: left; }

/* Responsive utilities - use with caution
   ========================================================================== */
/**
* These classes will hide content at defined breakpoints.
*
* For example:
* <div class="hide_xs">
*   Something worth hiding
* </div>
*
* This div will not show at XS breakpoint. This content still LOADS, however,
* so be cognizant of the load impact and use *wisely*.
*/
@media screen and (min-width: 1201px) {
  .hide_xl {
    display: none !important; } }
@media screen and (max-width: 1200px) and (min-width: 993px) {
  .hide_lg {
    display: none !important; } }
@media screen and (max-width: 1200px) {
  .hide_ltlg {
    display: none !important; } }
@media screen and (max-width: 992px) and (min-width: 769px) {
  .hide_md {
    display: none !important; } }
@media screen and (max-width: 992px) {
  .hide_ltmd {
    display: none !important; } }
@media screen and (max-width: 768px) and (min-width: 481px) {
  .hide_sm {
    display: none !important; } }
@media screen and (max-width: 768px) {
  .hide_ltsm {
    display: none !important; } }
@media screen and (max-width: 480px) {
  .hide_xs {
    display: none !important; }

  /* 1 */ }
@media screen and (min-width: 480px) {
  .hide_gtxs {
    display: none !important; } }
@media screen and (min-width: 768px) {
  .hide_gtsm {
    display: none !important; } }
/* Container
   ========================================================================== */
/**
* The container class, when included, will constrain the width of its
* children, based on defined media breakpoints.
*
* 1. Include a $container-max if you want to constrain the maximum allowable
*    width for the container, regardless of breakpoint constraints.
*
* 2. Center the container by default.
*
* 3. @if statement handles
*/
/* Container constraint variables */
/* 1 */
/* 2 */
.container {
  padding: 0 10px;
  margin-left: auto;
  margin-right: auto;
  /**
  * @include at_breakpoints to collapse the container as it reaches
  * each breakpoint.
  */
  /**
    * 1. Use .flex to extend the .container class and allow a fully flexible,
    *    100% width container that still pads the sides appropriately. Totally
    *    works well with the grid classes, too.
    *
    * 2. Use .contain-to-N to extend the .container class to set a max width for
    *    a particular container. By default, the .container class contains to xl.
    *
    * For example: Maybe a text-heavy section will read better when contained to
    * a "md" size, but the header and footer can remain contained to "xl" size.
    *
    * <header class="container">
    *   Header content
    * </header>
    * <section class="main-content container contain-to-md">
    *   Body content
    * </section>
    * <footer class="container">
    *   Footer content
    * </footer>
    */
  /* 2 */ }
  .container > .container {
    padding: 0 !important; }
  @media screen and (min-width: 1201px) {
    .container {
      /* 4 */
      width: 1180px; } }
  @media screen and (max-width: 1200px) {
    .container {
      width: 972px; } }
  @media screen and (max-width: 992px) {
    .container {
      width: 748px; } }
  @media screen and (max-width: 768px) {
    .container {
      width: 460px; } }
  @media screen and (max-width: 480px) {
    .container {
      width: 100%;
      /* 1 */ } }
  .container.flex {
    /* 1 */
    max-width: 100%;
    width: 100%; }
  .container.contain-to-lg {
    max-width: 972px; }
  .container.contain-to-md {
    max-width: 748px; }
  .container.contain-to-sm {
    max-width: 460px; }

/* ==========================================================================
   Grid
   ========================================================================== */
/**
* Example:
*
* <section class="grid">
*   <div class="g _1-2">
*     Content
*   </div>
*   <div class="g _1-4">
*     Content
*   </div>
*   <div class="g _1-4">
*     Content
*   </div>
* </section>
*/
/**
* 1. Fix for lists.
* 2. Negative margin to offset grid parent
* 3. Set font size to 0 to fix inline-block extra space
*    http://css-tricks.com/fighting-the-space-between-inline-block-elements/
*/
.grid {
  list-style: none;
  /* 1 */
  margin-left: -24px;
  /* 2 */
  padding: 0;
  font-size: 0; }

/**
 * 1. Cause columns to stack side-by-side.
 * 2. Space columns apart.
 * 3. Align columns to the tops of each other.
 * 4. Full-width unless told to behave otherwise.
 * 5. Required to combine fluid widths and fixed gutters.
 * 6. Set font size back to base to fix inline-block extra space
 */
.g {
  display: inline-block;
  /* 1 */
  padding-left: 24px;
  /* 2 */
  vertical-align: top;
  /* 3 */
  width: 100%;
  /* 4 */
  font-size: 16px;
  /* 6 */ }

/* Widths */
._1-1,
._2_2,
._3_3,
._4_4,
._5_5,
._6_6 {
  width: 100%; }

._1-2,
._2-4,
._3-6 {
  width: 50%; }

._1-3,
._2-6 {
  width: 33.333%; }

._2-3,
._4-6 {
  width: 66.666%; }

._1-4 {
  width: 25%; }

._3-4 {
  width: 75%; }

._1-5 {
  width: 20%; }

._2-5 {
  width: 40%; }

._3-5 {
  width: 60%; }

._4-5 {
  width: 80%; }

._1-6 {
  width: 16.667%; }

._5-6 {
  width: 83.333%; }

@media screen and (max-width: 480px) {
  ._1-1-xs,
  ._2_2-xs,
  ._3_3-xs,
  ._4_4-xs,
  ._5_5-xs,
  ._6_6-xs {
    width: 100%; }

  ._1-2-xs,
  ._2-4-xs,
  ._3-6-xs {
    width: 50%; }

  ._1-3-xs,
  ._2-6-xs {
    width: 33.333%; }

  ._2-3-xs,
  ._4-6-xs {
    width: 66.666%; }

  ._1-4-xs {
    width: 25%; }

  ._3-4-xs {
    width: 75%; }

  ._1-5-xs {
    width: 20%; }

  ._2-5-xs {
    width: 40%; }

  ._3-5-xs {
    width: 60%; }

  ._4-5-xs {
    width: 80%; }

  ._1-6-xs {
    width: 16.667%; }

  ._5-6-xs {
    width: 83.333%; }

  /* 1 */ }
@media screen and (max-width: 768px) {
  ._1-1-sm,
  ._2_2-sm,
  ._3_3-sm,
  ._4_4-sm,
  ._5_5-sm,
  ._6_6-sm {
    width: 100%; }

  ._1-2-sm,
  ._2-4-sm,
  ._3-6-sm {
    width: 50%; }

  ._1-3-sm,
  ._2-6-sm {
    width: 33.333%; }

  ._2-3-sm,
  ._4-6-sm {
    width: 66.666%; }

  ._1-4-sm {
    width: 25%; }

  ._3-4-sm {
    width: 75%; }

  ._1-5-sm {
    width: 20%; }

  ._2-5-sm {
    width: 40%; }

  ._3-5-sm {
    width: 60%; }

  ._4-5-sm {
    width: 80%; }

  ._1-6-sm {
    width: 16.667%; }

  ._5-6-sm {
    width: 83.333%; } }
@media screen and (max-width: 992px) {
  ._1-1-md,
  ._2_2-md,
  ._3_3-md,
  ._4_4-md,
  ._5_5-md,
  ._6_6-md {
    width: 100%; }

  ._1-2-md,
  ._2-4-md,
  ._3-6-md {
    width: 50%; }

  ._1-3-md,
  ._2-6-md {
    width: 33.333%; }

  ._2-3-md,
  ._4-6-md {
    width: 66.666%; }

  ._1-4-md {
    width: 25%; }

  ._3-4-md {
    width: 75%; }

  ._1-5-md {
    width: 20%; }

  ._2-5-md {
    width: 40%; }

  ._3-5-md {
    width: 60%; }

  ._4-5-md {
    width: 80%; }

  ._1-6-md {
    width: 16.667%; }

  ._5-6-md {
    width: 83.333%; } }
@media screen and (max-width: 1200px) {
  ._1-1-lg,
  ._2_2-lg,
  ._3_3-lg,
  ._4_4-lg,
  ._5_5-lg,
  ._6_6-lg {
    width: 100%; }

  ._1-2-lg,
  ._2-4-lg,
  ._3-6-lg {
    width: 50%; }

  ._1-3-lg,
  ._2-6-lg {
    width: 33.333%; }

  ._2-3-lg,
  ._4-6-lg {
    width: 66.666%; }

  ._1-4-lg {
    width: 25%; }

  ._3-4-lg {
    width: 75%; }

  ._1-5-lg {
    width: 20%; }

  ._2-5-lg {
    width: 40%; }

  ._3-5-lg {
    width: 60%; }

  ._4-5-lg {
    width: 80%; }

  ._1-6-lg {
    width: 16.667%; }

  ._5-6-lg {
    width: 83.333%; } }
/* Utility classes
   ========================================================================== */
/**
* Grid utility classes extend the .grid class.
*/
/* Presents columns in reverse order of their markup. */
.grid {
  /* Center align grid. */
  /* Right align grid. */ }
  .grid.grid_reverse {
    direction: rtl;
    text-align: left; }
    .grid.grid_reverse > .g {
      direction: ltr;
      text-align: left; }
  .grid.grid_c {
    text-align: center; }
    .grid.grid_c > .g {
      text-align: left; }
  .grid.grid_r {
    text-align: right; }
    .grid.grid_r > .g {
      text-align: left;
      margin-right: 0; }

/* Modules - REUSABLE patterns. I'm only forcing one on you: buttons.
   ========================================================================== */
/**
* But don't be scared. These buttons are highly customizable and friendly!
*/
.btn {
  font-size: 1.90662rem;
  /* 1 */
  margin-bottom: 1rem;
  line-height: 2rem;
  /* 2 */
  letter-spacing: -0.01907rem;
  /* 3 */
  display: inline-block;
  font-weight: 100;
  text-align: center;
  vertical-align: top;
  background-color: #ababbb;
  color: white;
  border-style: solid;
  border-color: #8f8fa4;
  text-decoration: none;
  max-height: 4rem;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  cursor: pointer;
  border-width: 1px;
  border-radius: 0.25rem;
  -webkit-border-radius: 0.25rem;
  -moz-border-radius: 0.25rem;
  -webkit-transition: all 0.2s;
  -moz-transition: all 0.2s;
  -ms-transition: all 0.2s;
  -o-transition: all 0.2s;
  transition: all 0.2s; }
  .btn:not([class^="px"]):not([class*="px"]) {
    padding-left: 3rem;
    padding-right: 3rem; }
  .btn:not([class^="py"]):not([class*="py"]) {
    padding-top: 1rem;
    padding-bottom: 1rem; }
  .btn:hover {
    background-color: #c2c2cd;
    border-color: #a5a5b6;
    color: white;
    text-shadow: 0 0 15px white, 0 0 30px white; }
  .btn:active {
    -webkit-box-shadow: inset 0 2px 6px rgba(0, 0, 0, 0.3);
    -moz-box-shadow: inset 0 2px 6px rgba(0, 0, 0, 0.3);
    box-shadow: inset 0 2px 6px rgba(0, 0, 0, 0.3); }
  .btn:visited {
    color: white; }
  .btn.disabled, .btn[disabled] {
    cursor: not-allowed;
    pointer-events: none;
    opacity: 0.45;
    box-shadow: none; }

.btn-primary {
  background-color: #007acb;
  color: white;
  border-color: #005b98; }
  .btn-primary:hover {
    background-color: #0093f4;
    border-color: #0074c1; }

.btn-secondary {
  background-color: #bc87dd;
  color: white;
  border-color: #a65fd2; }
  .btn-secondary:hover {
    background-color: #cea7e6;
    border-color: #b87fdb; }

.btn-tertiary {
  background-color: #9accec;
  color: white;
  border-color: #6fb6e4; }
  .btn-tertiary:hover {
    background-color: #bcddf2;
    border-color: #91c8ea; }

.btn-link {
  background-color: transparent;
  color: #007acb;
  border-color: transparent; }
  .btn-link:visited {
    color: #007acb; }
  .btn-link:hover {
    background-color: #d4e6f0;
    color: #9accec;
    border-color: rgba(20, 20, 20, 0); }
  .btn-link:active {
    color: #007acb; }
  .btn-link.btn-link-dark:hover {
    background-color: rgba(255, 255, 255, 0.15); }

.btn-xl {
  font-size: 2.93163rem;
  /* 1 */
  margin-bottom: 1rem;
  line-height: 3rem;
  /* 2 */
  letter-spacing: -0.02932rem;
  /* 3 */
  height: 7rem;
  max-height: 7rem; }
  .btn-xl:not([class^="px"]):not([class*="px"]) {
    padding-left: 6rem;
    padding-right: 6rem; }
  .btn-xl:not([class^="py"]):not([class*="py"]) {
    padding-top: 1.66rem;
    padding-bottom: 1.66rem; }

.btn-lg {
  font-size: 2.36421rem;
  /* 1 */
  margin-bottom: 1rem;
  line-height: 3rem;
  /* 2 */
  letter-spacing: -0.02364rem;
  /* 3 */
  height: 5rem;
  max-height: 5rem; }
  .btn-lg:not([class^="px"]):not([class*="px"]) {
    padding-left: 4.5rem;
    padding-right: 4.5rem; }
  .btn-lg:not([class^="py"]):not([class*="py"]) {
    padding-top: 1rem;
    padding-bottom: 1rem; }

.btn-sm {
  font-size: 1.24rem;
  /* 1 */
  margin-bottom: 1rem;
  line-height: 2rem;
  /* 2 */
  letter-spacing: -0.0124rem;
  /* 3 */
  height: 3rem;
  max-height: 3rem; }
  .btn-sm:not([class^="px"]):not([class*="px"]) {
    padding-left: 1.5rem;
    padding-right: 1.5rem; }
  .btn-sm:not([class^="py"]):not([class*="py"]) {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem; }

.btn-xs {
  font-size: 1rem;
  /* 1 */
  margin-bottom: 1rem;
  line-height: 1rem;
  /* 2 */
  letter-spacing: -0.01rem;
  /* 3 */
  height: 2rem;
  max-height: 2rem; }
  .btn-xs:not([class^="px"]):not([class*="px"]) {
    padding-left: 1rem;
    padding-right: 1rem; }
  .btn-xs:not([class^="py"]):not([class*="py"]) {
    padding-top: 0.33rem;
    padding-bottom: 0.33rem; }

@media screen and (max-width: 480px) {
  .btn {
    width: 100%;
    margin-left: 0 !important;
    margin-right: 0 !important; }
    .btn:not([class^="px"]):not([class*="px"]):not([class^="py"]):not([class*="py"]) {
      padding-left: 0 !important;
      padding-right: 0 !important; }

  /* 1 */ }
/* Testing - These things help me test the site and framework.
   ========================================================================== */
/**
* TODO: consider packaging the useful ones up and ditching the rest.
*
* Btw, this is the bulk of the file size thus far.
*/
.skin-red {
  background-color: #b70808;
  color: #fcc2c2; }
  .skin-red .btn-skin,
  .skin-red .btn-skin-dark {
    font-weight: 400;
    border-width: 2px; }
    .skin-red .btn-skin:hover,
    .skin-red .btn-skin-dark:hover {
      background-color: #b70808;
      border-color: #fcc2c2;
      color: white; }
  .skin-red .btn-skin {
    background-color: #b70808;
    border-color: #590000;
    color: #590000; }
  .skin-red .btn-skin-dark {
    background-color: #590000;
    border-color: #260000;
    color: #e80a0a; }
  .skin-red p, .skin-red .p {
    color: #fcc2c2; }
  .skin-red .light {
    color: #fcc2c2; }
  .skin-red .dark {
    color: #380707; }
  .skin-red .bordered, .skin-red.bordered {
    border-color: #8a1111; }
  .skin-red.bg-gradient {
    background: #b70808;
    background: -moz-linear-gradient(-45deg, #6e0505 0%, #b70808 50%, #6e0505 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, #6e0505), color-stop(50%, #b70808), color-stop(100%, #6e0505));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg, #6e0505 0%, #b70808 50%, #6e0505 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg, #6e0505 0%, #b70808 50%, #6e0505 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg, #6e0505 0%, #b70808 50%, #6e0505 100%);
    /* IE10+ */
    background: linear-gradient(135deg, #6e0505 0%, #b70808 50%, #6e0505 100%);
    /* W3C */ }

.skin-orange {
  background-color: #e39215;
  color: #fefcf9; }
  .skin-orange .btn-skin,
  .skin-orange .btn-skin-dark {
    font-weight: 400;
    border-width: 2px; }
    .skin-orange .btn-skin:hover,
    .skin-orange .btn-skin-dark:hover {
      background-color: #e39215;
      border-color: #fefcf9;
      color: white; }
  .skin-orange .btn-skin {
    background-color: #e39215;
    border-color: #905802;
    color: #905802; }
  .skin-orange .btn-skin-dark {
    background-color: #905802;
    border-color: #5e3901;
    color: #eda83e; }
  .skin-orange p, .skin-orange .p {
    color: #fefcf9; }
  .skin-orange .light {
    color: #fefcf9; }
  .skin-orange .dark {
    color: #664513; }
  .skin-orange .bordered, .skin-orange.bordered {
    border-color: #b37a21; }
  .skin-orange.bg-gradient {
    background: #e39215;
    background: -moz-linear-gradient(-45deg, #9d650f 0%, #e39215 50%, #9d650f 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, #9d650f), color-stop(50%, #e39215), color-stop(100%, #9d650f));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg, #9d650f 0%, #e39215 50%, #9d650f 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg, #9d650f 0%, #e39215 50%, #9d650f 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg, #9d650f 0%, #e39215 50%, #9d650f 100%);
    /* IE10+ */
    background: linear-gradient(135deg, #9d650f 0%, #e39215 50%, #9d650f 100%);
    /* W3C */ }

.skin-tomato {
  background-color: #e73c36;
  color: white; }
  .skin-tomato .btn-skin,
  .skin-tomato .btn-skin-dark {
    font-weight: 400;
    border-width: 2px; }
    .skin-tomato .btn-skin:hover,
    .skin-tomato .btn-skin-dark:hover {
      background-color: #e73c36;
      border-color: white;
      color: white; }
  .skin-tomato .btn-skin {
    background-color: #e73c36;
    border-color: #b00c07;
    color: #b00c07; }
  .skin-tomato .btn-skin-dark {
    background-color: #b00c07;
    border-color: #7f0905;
    color: #ec6864; }
  .skin-tomato p, .skin-tomato .p {
    color: white; }
  .skin-tomato .light {
    color: white; }
  .skin-tomato .dark {
    color: #821f1c; }
  .skin-tomato .bordered, .skin-tomato.bordered {
    border-color: #cd322c; }
  .skin-tomato.bg-gradient {
    background: #e73c36;
    background: -moz-linear-gradient(-45deg, #ba1c16 0%, #e73c36 50%, #ba1c16 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, #ba1c16), color-stop(50%, #e73c36), color-stop(100%, #ba1c16));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg, #ba1c16 0%, #e73c36 50%, #ba1c16 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg, #ba1c16 0%, #e73c36 50%, #ba1c16 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg, #ba1c16 0%, #e73c36 50%, #ba1c16 100%);
    /* IE10+ */
    background: linear-gradient(135deg, #ba1c16 0%, #e73c36 50%, #ba1c16 100%);
    /* W3C */ }

.skin-green {
  background-color: #0fa359;
  color: #b8f9d9; }
  .skin-green .btn-skin,
  .skin-green .btn-skin-dark {
    font-weight: 400;
    border-width: 2px; }
    .skin-green .btn-skin:hover,
    .skin-green .btn-skin-dark:hover {
      background-color: #0fa359;
      border-color: #b8f9d9;
      color: white; }
  .skin-green .btn-skin {
    background-color: #0fa359;
    border-color: #014b26;
    color: #014b26; }
  .skin-green .btn-skin-dark {
    background-color: #014b26;
    border-color: #00190c;
    color: #13d273; }
  .skin-green p, .skin-green .p {
    color: #b8f9d9; }
  .skin-green .light {
    color: #b8f9d9; }
  .skin-green .dark {
    color: #082b19; }
  .skin-green .bordered, .skin-green.bordered {
    border-color: #167847; }
  .skin-green.bg-gradient {
    background: #0fa359;
    background: -moz-linear-gradient(-45deg, #095d33 0%, #0fa359 50%, #095d33 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, #095d33), color-stop(50%, #0fa359), color-stop(100%, #095d33));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg, #095d33 0%, #0fa359 50%, #095d33 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg, #095d33 0%, #0fa359 50%, #095d33 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg, #095d33 0%, #0fa359 50%, #095d33 100%);
    /* IE10+ */
    background: linear-gradient(135deg, #095d33 0%, #0fa359 50%, #095d33 100%);
    /* W3C */ }

.skin-cyan {
  background-color: #2ca8e4;
  color: white; }
  .skin-cyan .btn-skin,
  .skin-cyan .btn-skin-dark {
    font-weight: 400;
    border-width: 2px; }
    .skin-cyan .btn-skin:hover,
    .skin-cyan .btn-skin-dark:hover {
      background-color: #2ca8e4;
      border-color: white;
      color: white; }
  .skin-cyan .btn-skin {
    background-color: #2ca8e4;
    border-color: #0770a3;
    color: #0770a3; }
  .skin-cyan .btn-skin-dark {
    background-color: #0770a3;
    border-color: #054e72;
    color: #59bbea; }
  .skin-cyan p, .skin-cyan .p {
    color: white; }
  .skin-cyan .light {
    color: white; }
  .skin-cyan .dark {
    color: #1b5876; }
  .skin-cyan .bordered, .skin-cyan.bordered {
    border-color: #2b90c1; }
  .skin-cyan.bg-gradient {
    background: #2ca8e4;
    background: -moz-linear-gradient(-45deg, #167cad 0%, #2ca8e4 50%, #167cad 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, #167cad), color-stop(50%, #2ca8e4), color-stop(100%, #167cad));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg, #167cad 0%, #2ca8e4 50%, #167cad 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg, #167cad 0%, #2ca8e4 50%, #167cad 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg, #167cad 0%, #2ca8e4 50%, #167cad 100%);
    /* IE10+ */
    background: linear-gradient(135deg, #167cad 0%, #2ca8e4 50%, #167cad 100%);
    /* W3C */ }

.skin-cyan-light {
  background-color: #5ebdea;
  color: white; }
  .skin-cyan-light .btn-skin,
  .skin-cyan-light .btn-skin-dark {
    font-weight: 400;
    border-width: 2px; }
    .skin-cyan-light .btn-skin:hover,
    .skin-cyan-light .btn-skin-dark:hover {
      background-color: #5ebdea;
      border-color: white;
      color: white; }
  .skin-cyan-light .btn-skin {
    background-color: #5ebdea;
    border-color: #0a96d8;
    color: #0a96d8; }
  .skin-cyan-light .btn-skin-dark {
    background-color: #0a96d8;
    border-color: #0874a7;
    color: #8bcff0; }
  .skin-cyan-light p, .skin-cyan-light .p {
    color: white; }
  .skin-cyan-light .light {
    color: white; }
  .skin-cyan-light .dark {
    color: #257ba3; }
  .skin-cyan-light .bordered, .skin-cyan-light.bordered {
    border-color: #4eabd7; }
  .skin-cyan-light.bg-gradient {
    background: #5ebdea;
    background: -moz-linear-gradient(-45deg, #1da0de 0%, #5ebdea 50%, #1da0de 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, #1da0de), color-stop(50%, #5ebdea), color-stop(100%, #1da0de));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg, #1da0de 0%, #5ebdea 50%, #1da0de 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg, #1da0de 0%, #5ebdea 50%, #1da0de 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg, #1da0de 0%, #5ebdea 50%, #1da0de 100%);
    /* IE10+ */
    background: linear-gradient(135deg, #1da0de 0%, #5ebdea 50%, #1da0de 100%);
    /* W3C */ }

.skin-blue-dark {
  background-color: #1b537a;
  color: #a8d0ec; }
  .skin-blue-dark .btn-skin,
  .skin-blue-dark .btn-skin-dark {
    font-weight: 400;
    border-width: 2px; }
    .skin-blue-dark .btn-skin:hover,
    .skin-blue-dark .btn-skin-dark:hover {
      background-color: #1b537a;
      border-color: #a8d0ec;
      color: white; }
  .skin-blue-dark .btn-skin {
    background-color: #1b537a;
    border-color: #051b2a;
    color: #051b2a; }
  .skin-blue-dark .btn-skin-dark {
    background-color: #051b2a;
    border-color: black;
    color: #246fa4; }
  .skin-blue-dark p, .skin-blue-dark .p {
    color: #a8d0ec; }
  .skin-blue-dark .light {
    color: #a8d0ec; }
  .skin-blue-dark .dark {
    color: #050c10; }
  .skin-blue-dark .bordered, .skin-blue-dark.bordered {
    border-color: #1c3e55; }
  .skin-blue-dark.bg-gradient {
    background: #1b537a;
    background: -moz-linear-gradient(-45deg, #0d283b 0%, #1b537a 50%, #0d283b 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, #0d283b), color-stop(50%, #1b537a), color-stop(100%, #0d283b));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg, #0d283b 0%, #1b537a 50%, #0d283b 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg, #0d283b 0%, #1b537a 50%, #0d283b 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg, #0d283b 0%, #1b537a 50%, #0d283b 100%);
    /* IE10+ */
    background: linear-gradient(135deg, #0d283b 0%, #1b537a 50%, #0d283b 100%);
    /* W3C */ }

.skin-blue {
  background-color: #366e99;
  color: #dce9f2; }
  .skin-blue .btn-skin,
  .skin-blue .btn-skin-dark {
    font-weight: 400;
    border-width: 2px; }
    .skin-blue .btn-skin:hover,
    .skin-blue .btn-skin-dark:hover {
      background-color: #366e99;
      border-color: #dce9f2;
      color: white; }
  .skin-blue .btn-skin {
    background-color: #366e99;
    border-color: #143955;
    color: #143955; }
  .skin-blue .btn-skin-dark {
    background-color: #143955;
    border-color: #0a1d2c;
    color: #4589bd; }
  .skin-blue p, .skin-blue .p {
    color: #dce9f2; }
  .skin-blue .light {
    color: #dce9f2; }
  .skin-blue .dark {
    color: #1a2a35; }
  .skin-blue .bordered, .skin-blue.bordered {
    border-color: #395973; }
  .skin-blue.bg-gradient {
    background: #366e99;
    background: -moz-linear-gradient(-45deg, #224560 0%, #366e99 50%, #224560 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, #224560), color-stop(50%, #366e99), color-stop(100%, #224560));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg, #224560 0%, #366e99 50%, #224560 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg, #224560 0%, #366e99 50%, #224560 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg, #224560 0%, #366e99 50%, #224560 100%);
    /* IE10+ */
    background: linear-gradient(135deg, #224560 0%, #366e99 50%, #224560 100%);
    /* W3C */ }

.skin-blue-soft {
  background-color: #669cc2;
  color: white; }
  .skin-blue-soft .btn-skin,
  .skin-blue-soft .btn-skin-dark {
    font-weight: 400;
    border-width: 2px; }
    .skin-blue-soft .btn-skin:hover,
    .skin-blue-soft .btn-skin-dark:hover {
      background-color: #669cc2;
      border-color: white;
      color: white; }
  .skin-blue-soft .btn-skin {
    background-color: #669cc2;
    border-color: #2a6b98;
    color: #2a6b98; }
  .skin-blue-soft .btn-skin-dark {
    background-color: #2a6b98;
    border-color: #1f4f70;
    color: #8ab4d1; }
  .skin-blue-soft p, .skin-blue-soft .p {
    color: white; }
  .skin-blue-soft .light {
    color: white; }
  .skin-blue-soft .dark {
    color: #3c586d; }
  .skin-blue-soft .bordered, .skin-blue-soft.bordered {
    border-color: #5e88a6; }
  .skin-blue-soft.bg-gradient {
    background: #669cc2;
    background: -moz-linear-gradient(-45deg, #3f769d 0%, #669cc2 50%, #3f769d 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, #3f769d), color-stop(50%, #669cc2), color-stop(100%, #3f769d));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg, #3f769d 0%, #669cc2 50%, #3f769d 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg, #3f769d 0%, #669cc2 50%, #3f769d 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg, #3f769d 0%, #669cc2 50%, #3f769d 100%);
    /* IE10+ */
    background: linear-gradient(135deg, #3f769d 0%, #669cc2 50%, #3f769d 100%);
    /* W3C */ }

.skin-blue-light {
  background-color: #a9caea;
  color: white; }
  .skin-blue-light .btn-skin,
  .skin-blue-light .btn-skin-dark {
    font-weight: 400;
    border-width: 2px; }
    .skin-blue-light .btn-skin:hover,
    .skin-blue-light .btn-skin-dark:hover {
      background-color: #a9caea;
      border-color: white;
      color: white; }
  .skin-blue-light .btn-skin {
    background-color: #a9caea;
    border-color: #4898e5;
    color: #4898e5; }
  .skin-blue-light .btn-skin-dark {
    background-color: #4898e5;
    border-color: #207eda;
    color: #d2e3f4; }
  .skin-blue-light p, .skin-blue-light .p {
    color: white; }
  .skin-blue-light .light {
    color: white; }
  .skin-blue-light .dark {
    color: #538bc1; }
  .skin-blue-light .bordered, .skin-blue-light.bordered {
    border-color: #96b8d9; }
  .skin-blue-light.bg-gradient {
    background: #a9caea;
    background: -moz-linear-gradient(-45deg, #6ca4db 0%, #a9caea 50%, #6ca4db 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, #6ca4db), color-stop(50%, #a9caea), color-stop(100%, #6ca4db));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg, #6ca4db 0%, #a9caea 50%, #6ca4db 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg, #6ca4db 0%, #a9caea 50%, #6ca4db 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg, #6ca4db 0%, #a9caea 50%, #6ca4db 100%);
    /* IE10+ */
    background: linear-gradient(135deg, #6ca4db 0%, #a9caea 50%, #6ca4db 100%);
    /* W3C */ }

.skin-gray {
  background-color: #626b7e;
  color: #eeeff1; }
  .skin-gray .btn-skin,
  .skin-gray .btn-skin-dark {
    font-weight: 400;
    border-width: 2px; }
    .skin-gray .btn-skin:hover,
    .skin-gray .btn-skin-dark:hover {
      background-color: #626b7e;
      border-color: #eeeff1;
      color: white; }
  .skin-gray .btn-skin {
    background-color: #626b7e;
    border-color: #2d374d;
    color: #2d374d; }
  .skin-gray .btn-skin-dark {
    background-color: #2d374d;
    border-color: #1a202d;
    color: #7b8498; }
  .skin-gray p, .skin-gray .p {
    color: #eeeff1; }
  .skin-gray .light {
    color: #eeeff1; }
  .skin-gray .dark {
    color: #303030; }
  .skin-gray .bordered, .skin-gray.bordered {
    border-color: #5e5e5e; }
  .skin-gray.bg-gradient {
    background: #626b7e;
    background: -moz-linear-gradient(-45deg, #414653 0%, #626b7e 50%, #414653 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, #414653), color-stop(50%, #626b7e), color-stop(100%, #414653));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg, #414653 0%, #626b7e 50%, #414653 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg, #414653 0%, #626b7e 50%, #414653 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg, #414653 0%, #626b7e 50%, #414653 100%);
    /* IE10+ */
    background: linear-gradient(135deg, #414653 0%, #626b7e 50%, #414653 100%);
    /* W3C */ }

.skin-gray-dark {
  background-color: #505a69;
  color: #d7dbe1; }
  .skin-gray-dark .btn-skin,
  .skin-gray-dark .btn-skin-dark {
    font-weight: 400;
    border-width: 2px; }
    .skin-gray-dark .btn-skin:hover,
    .skin-gray-dark .btn-skin-dark:hover {
      background-color: #505a69;
      border-color: #d7dbe1;
      color: white; }
  .skin-gray-dark .btn-skin {
    background-color: #505a69;
    border-color: #1e2735;
    color: #1e2735; }
  .skin-gray-dark .btn-skin-dark {
    background-color: #1e2735;
    border-color: #0c0f14;
    color: #667386; }
  .skin-gray-dark p, .skin-gray-dark .p {
    color: #d7dbe1; }
  .skin-gray-dark .light {
    color: #d7dbe1; }
  .skin-gray-dark .dark {
    color: #1d1d1d; }
  .skin-gray-dark .bordered, .skin-gray-dark.bordered {
    border-color: #4b4b4b; }
  .skin-gray-dark.bg-gradient {
    background: #505a69;
    background: -moz-linear-gradient(-45deg, #2f353e 0%, #505a69 50%, #2f353e 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, #2f353e), color-stop(50%, #505a69), color-stop(100%, #2f353e));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg, #2f353e 0%, #505a69 50%, #2f353e 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg, #2f353e 0%, #505a69 50%, #2f353e 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg, #2f353e 0%, #505a69 50%, #2f353e 100%);
    /* IE10+ */
    background: linear-gradient(135deg, #2f353e 0%, #505a69 50%, #2f353e 100%);
    /* W3C */ }

.skin-gray-darkest {
  background-color: #3f4551;
  color: #c1c5ce; }
  .skin-gray-darkest .btn-skin,
  .skin-gray-darkest .btn-skin-dark {
    font-weight: 400;
    border-width: 2px; }
    .skin-gray-darkest .btn-skin:hover,
    .skin-gray-darkest .btn-skin-dark:hover {
      background-color: #3f4551;
      border-color: #c1c5ce;
      color: white; }
  .skin-gray-darkest .btn-skin {
    background-color: #3f4551;
    border-color: #0f131b;
    color: #0f131b; }
  .skin-gray-darkest .btn-skin-dark {
    background-color: #0f131b;
    border-color: black;
    color: #555d6e; }
  .skin-gray-darkest p, .skin-gray-darkest .p {
    color: #c1c5ce; }
  .skin-gray-darkest .light {
    color: #c1c5ce; }
  .skin-gray-darkest .dark {
    color: #080808; }
  .skin-gray-darkest .bordered, .skin-gray-darkest.bordered {
    border-color: #363636; }
  .skin-gray-darkest.bg-gradient {
    background: #3f4551;
    background: -moz-linear-gradient(-45deg, #1e2026 0%, #3f4551 50%, #1e2026 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, #1e2026), color-stop(50%, #3f4551), color-stop(100%, #1e2026));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg, #1e2026 0%, #3f4551 50%, #1e2026 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg, #1e2026 0%, #3f4551 50%, #1e2026 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg, #1e2026 0%, #3f4551 50%, #1e2026 100%);
    /* IE10+ */
    background: linear-gradient(135deg, #1e2026 0%, #3f4551 50%, #1e2026 100%);
    /* W3C */ }

.skin-gray-soft {
  background-color: #a2acb7;
  color: white; }
  .skin-gray-soft .btn-skin,
  .skin-gray-soft .btn-skin-dark {
    font-weight: 400;
    border-width: 2px; }
    .skin-gray-soft .btn-skin:hover,
    .skin-gray-soft .btn-skin-dark:hover {
      background-color: #a2acb7;
      border-color: white;
      color: white; }
  .skin-gray-soft .btn-skin {
    background-color: #a2acb7;
    border-color: #59789a;
    color: #59789a; }
  .skin-gray-soft .btn-skin-dark {
    background-color: #59789a;
    border-color: #465f7a;
    color: #bfc6cd; }
  .skin-gray-soft p, .skin-gray-soft .p {
    color: white; }
  .skin-gray-soft .light {
    color: white; }
  .skin-gray-soft .dark {
    color: #6d6d6d; }
  .skin-gray-soft .bordered, .skin-gray-soft.bordered {
    border-color: #9b9b9b; }
  .skin-gray-soft.bg-gradient {
    background: #a2acb7;
    background: -moz-linear-gradient(-45deg, #778696 0%, #a2acb7 50%, #778696 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, #778696), color-stop(50%, #a2acb7), color-stop(100%, #778696));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg, #778696 0%, #a2acb7 50%, #778696 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg, #778696 0%, #a2acb7 50%, #778696 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg, #778696 0%, #a2acb7 50%, #778696 100%);
    /* IE10+ */
    background: linear-gradient(135deg, #778696 0%, #a2acb7 50%, #778696 100%);
    /* W3C */ }

.skin-gray-light {
  background-color: #dbe1ed;
  color: white; }
  .skin-gray-light .btn-skin,
  .skin-gray-light .btn-skin-dark {
    font-weight: 400;
    border-width: 2px; }
    .skin-gray-light .btn-skin:hover,
    .skin-gray-light .btn-skin-dark:hover {
      background-color: #dbe1ed;
      border-color: white;
      color: white; }
  .skin-gray-light .btn-skin {
    background-color: #dbe1ed;
    border-color: #8ca5d6;
    color: #8ca5d6; }
  .skin-gray-light .btn-skin-dark {
    background-color: #8ca5d6;
    border-color: #6787c8;
    color: #fdfdfe; }
  .skin-gray-light p, .skin-gray-light .p {
    color: white; }
  .skin-gray-light .light {
    color: white; }
  .skin-gray-light .dark {
    color: #939eb6; }
  .skin-gray-light .bordered, .skin-gray-light.bordered {
    border-color: #c9cfdb; }
  .skin-gray-light.bg-gradient {
    background: #dbe1ed;
    background: -moz-linear-gradient(-45deg, #a8b6d4 0%, #dbe1ed 50%, #a8b6d4 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, #a8b6d4), color-stop(50%, #dbe1ed), color-stop(100%, #a8b6d4));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg, #a8b6d4 0%, #dbe1ed 50%, #a8b6d4 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg, #a8b6d4 0%, #dbe1ed 50%, #a8b6d4 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg, #a8b6d4 0%, #dbe1ed 50%, #a8b6d4 100%);
    /* IE10+ */
    background: linear-gradient(135deg, #a8b6d4 0%, #dbe1ed 50%, #a8b6d4 100%);
    /* W3C */ }

.skin-gray-lightest {
  background-color: #f7f7f7;
  color: white; }
  .skin-gray-lightest .btn-skin,
  .skin-gray-lightest .btn-skin-dark {
    font-weight: 400;
    border-width: 2px; }
    .skin-gray-lightest .btn-skin:hover,
    .skin-gray-lightest .btn-skin-dark:hover {
      background-color: #f7f7f7;
      border-color: white;
      color: white; }
  .skin-gray-lightest .btn-skin {
    background-color: #f7f7f7;
    border-color: #ccbcbc;
    color: #ccbcbc; }
  .skin-gray-lightest .btn-skin-dark {
    background-color: #ccbcbc;
    border-color: #b69f9f;
    color: white; }
  .skin-gray-lightest p, .skin-gray-lightest .p {
    color: white; }
  .skin-gray-lightest .light {
    color: white; }
  .skin-gray-lightest .dark {
    color: #b7b7b7; }
  .skin-gray-lightest .bordered, .skin-gray-lightest.bordered {
    border-color: #e5e5e5; }
  .skin-gray-lightest.bg-gradient {
    background: #f7f7f7;
    background: -moz-linear-gradient(-45deg, #d1d1d1 0%, #f7f7f7 50%, #d1d1d1 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right bottom, color-stop(0%, #d1d1d1), color-stop(50%, #f7f7f7), color-stop(100%, #d1d1d1));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(-45deg, #d1d1d1 0%, #f7f7f7 50%, #d1d1d1 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(-45deg, #d1d1d1 0%, #f7f7f7 50%, #d1d1d1 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(-45deg, #d1d1d1 0%, #f7f7f7 50%, #d1d1d1 100%);
    /* IE10+ */
    background: linear-gradient(135deg, #d1d1d1 0%, #f7f7f7 50%, #d1d1d1 100%);
    /* W3C */ }

/* ==========================================================================
   Styles for testing purposes
   ========================================================================== */
.bg-grid-test.container {
  outline: 1px dotted rgba(54, 110, 153, 0.3); }
.bg-grid-test .g {
  position: relative;
  overflow: hidden; }
  .bg-grid-test .g:before {
    content: '';
    position: absolute;
    z-index: 1;
    background-color: rgba(54, 110, 153, 0.3);
    top: 1px;
    left: 25px;
    right: 1px;
    bottom: 1px;
    display: block;
    pointer-events: none;
    outline: 1px solid rgba(54, 110, 153, 0.5); }
  .bg-grid-test .g:after {
    line-height: 2rem;
    color: #0d8c4c;
    font-size: 0.75rem;
    content: '';
    position: absolute;
    z-index: 1;
    background-color: rgba(255, 255, 255, 0.5);
    width: 24px;
    pointer-events: none; }

.bg-blueprint {
  background-color: transparent;
  background-image: linear-gradient(rgba(54, 110, 153, 0.1) 1px, transparent 1px);
  background-size: 1rem 1rem;
  background-position: top center; }
  .bg-blueprint.dark-version {
    background-color: #366e99;
    background-image: linear-gradient(rgba(255, 255, 255, 0.1) 1px, transparent 1px), linear-gradient(90deg, rgba(255, 255, 255, 0.05) 1px, transparent 1px); }
    .bg-blueprint.dark-version div, .bg-blueprint.dark-version h1, .bg-blueprint.dark-version h2, .bg-blueprint.dark-version h3, .bg-blueprint.dark-version h4, .bg-blueprint.dark-version h5, .bg-blueprint.dark-version h6, .bg-blueprint.dark-version p, .bg-blueprint.dark-version section, .bg-blueprint.dark-version article, .bg-blueprint.dark-version header, .bg-blueprint.dark-version footer, .bg-blueprint.dark-version ul, .bg-blueprint.dark-version ol, .bg-blueprint.dark-version dl, .bg-blueprint.dark-version li, .bg-blueprint.dark-version td, .bg-blueprint.dark-version tr, .bg-blueprint.dark-version th, .bg-blueprint.dark-version label, .bg-blueprint.dark-version input, .bg-blueprint.dark-version fieldset, .bg-blueprint.dark-version aside {
      outline: 1px solid rgba(255, 255, 255, 0.5);
      color: #e8e9f2;
      background-color: rgba(255, 255, 255, 0.2); }
  .bg-blueprint div, .bg-blueprint h1, .bg-blueprint h2, .bg-blueprint h3, .bg-blueprint h4, .bg-blueprint h5, .bg-blueprint h6, .bg-blueprint p, .bg-blueprint section, .bg-blueprint article, .bg-blueprint header, .bg-blueprint footer, .bg-blueprint ul, .bg-blueprint ol, .bg-blueprint dl, .bg-blueprint li, .bg-blueprint td, .bg-blueprint tr, .bg-blueprint th, .bg-blueprint label, .bg-blueprint input, .bg-blueprint fieldset, .bg-blueprint aside {
    outline: 1px solid rgba(54, 110, 153, 0.3);
    background-color: rgba(54, 110, 153, 0.1); }

.img {
  max-width: 100%; }
  .img.right {
    margin-left: 1rem;
    margin-bottom: 1rem; }
  .img.left {
    margin-right: 1rem;
    margin-bottom: 1rem; }

.overflow_0 {
  overflow: hidden; }

.scale1 {
  max-height: 1rem; }

.scale2 {
  max-height: 2rem; }

.scale3 {
  max-height: 3rem; }

.scale5 {
  max-height: 5rem; }

.scale7 {
  max-height: 7rem; }

.scale10 {
  max-height: 10rem; }

.scale15 {
  max-height: 15rem; }

.scale20 {
  max-height: 20rem; }

.scale30 {
  max-height: 30rem; }

.scale50 {
  max-height: 30rem; }

@media screen and (max-width: 480px) {
  .scale5-xs {
    max-height: 5rem; }

  .scale7-xs {
    max-height: 7rem; }

  .scale10-xs {
    max-height: 10rem; }

  .scale15-xs {
    max-height: 15rem; }

  .scale20-xs {
    max-height: 20rem; }

  /* 1 */ }
@media screen and (max-width: 768px) and (min-width: 481px) {
  .scale5-sm {
    max-height: 5rem; }

  .scale7-sm {
    max-height: 7rem; }

  .scale10-sm {
    max-height: 10rem; }

  .scale15-sm {
    max-height: 15rem; }

  .scale20-sm {
    max-height: 20rem; } }
@media screen and (max-width: 992px) and (min-width: 769px) {
  .scale5-md {
    max-height: 5rem; }

  .scale7-md {
    max-height: 7rem; }

  .scale10-md {
    max-height: 10rem; }

  .scale15-md {
    max-height: 15rem; }

  .scale20-md {
    max-height: 20rem; } }
.bordered {
  border-style: solid; }

.border-none {
  border-width: 0 !important; }

.border-xs {
  border-width: 1px; }

.border-sm {
  border-width: 2px; }

.border-md {
  border-width: 3px; }

.border-lg {
  border-width: 5px; }

.border-xl {
  border-width: 10px; }

.round-bottom {
  border-top-right-radius: 0 !important;
  border-top-left-radius: 0 !important; }

.round-top {
  border-bottom-right-radius: 0 !important;
  border-bottom-left-radius: 0 !important; }

.round-right {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important; }

.round-left {
  border-bottom-right-radius: 0 !important;
  border-top-right-radius: 0 !important; }

.round-none {
  border-radius: 0 !important; }

.round-xs {
  border-radius: 2.66667px; }

.round-sm {
  border-radius: 4px; }

.round-md {
  border-radius: 8px; }

.round-lg {
  border-radius: 16px; }

.round-xl {
  border-radius: 24px; }

.trans-on-hover:hover {
  opacity: 0.25; }

.fill-screen {
  min-height: 100%; }

.contain-all {
  display: table;
  height: 100%;
  min-height: 100%;
  position: relative;
  overflow: hidden;
  width: 100%; }

.contain-wrapper {
  top: 50%;
  display: table-cell;
  vertical-align: middle;
  width: 100%;
  position: static; }

.contain-center {
  position: relative;
  top: -50%; }

/* Code blocks */
pre[class*="language-"] {
  margin: 0;
  padding: 1rem; }

code {
  font-size: 1.25rem;
  line-height: 2rem; }

.bg-stretch {
  background-position: center center;
  background-attachment: fixed; }

.bg-ghost {
  background-color: rgba(255, 255, 255, 0.25);
  border: 1px solid rgba(255, 255, 255, 0.5);
  color: white;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }

.light-shaded {
  color: white;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); }

.text-trans-semi {
  color: rgba(0, 0, 0, 0.5); }

.btn-outline {
  font-weight: 400;
  border-width: 2px;
  background-color: transparent;
  border-color: rgba(255, 255, 255, 0.5);
  color: rgba(255, 255, 255, 0.5); }
  .btn-outline:hover {
    background-color: rgba(255, 255, 255, 0.25);
    border-color: white;
    color: white; }

.logo {
  display: inline-block; }
  .logo:hover .logo-overlay {
    opacity: 1; }
    .logo:hover .logo-overlay:after {
      content: "yorthehunter.github.io";
      text-align: center;
      color: white;
      font-size: 12px;
      display: block; }
  .logo .logo-overlay {
    -webkit-transition: opacity 0.2s;
    -moz-transition: opacity 0.2s;
    -ms-transition: opacity 0.2s;
    -o-transition: opacity 0.2s;
    transition: opacity 0.2s;
    opacity: 0; }

.tooltip {
  position: absolute;
  z-index: 10;
  display: block;
  visibility: visible;
  line-height: 2rem;
  opacity: 0; }
  .tooltip.in {
    opacity: 0.9; }
  .tooltip.top {
    margin-top: -3px;
    padding: 6px 0; }
  .tooltip.right {
    margin-left: 3px;
    padding: 0 6px; }
  .tooltip.bottom {
    margin-top: 3px;
    padding: 6px 0; }
  .tooltip.left {
    margin-left: -3px;
    padding: 0 6px; }

.tooltip-inner {
  max-width: 300px;
  padding: 3px 8px;
  color: white;
  text-align: center;
  text-decoration: none;
  background-color: rgba(0, 0, 0, 0.8);
  border-radius: 3px; }

.tooltip-arrow {
  position: absolute;
  width: 0;
  height: 0;
  border-color: transparent;
  border-style: solid; }

.tooltip.top .tooltip-arrow {
  bottom: 0;
  left: 50%;
  margin-left: -6px;
  border-width: 6px 6px 0;
  border-top-color: rgba(0, 0, 0, 0.8); }
.tooltip.top-left .tooltip-arrow {
  bottom: 0;
  left: 6px;
  border-width: 6px 6px 0;
  border-top-color: rgba(0, 0, 0, 0.8); }
.tooltip.top-right .tooltip-arrow {
  bottom: 0;
  right: 6px;
  border-width: 6px 6px 0;
  border-top-color: rgba(0, 0, 0, 0.8); }
.tooltip.right .tooltip-arrow {
  top: 50%;
  left: 0;
  margin-top: -6px;
  border-width: 6px 6px 6px 0;
  border-right-color: rgba(0, 0, 0, 0.8); }
.tooltip.left .tooltip-arrow {
  top: 50%;
  right: 0;
  margin-top: -6px;
  border-width: 6px 0 6px 6px;
  border-left-color: rgba(0, 0, 0, 0.8); }
.tooltip.bottom .tooltip-arrow {
  top: 0;
  left: 50%;
  margin-left: -6px;
  border-width: 0 6px 6px;
  border-bottom-color: rgba(0, 0, 0, 0.8); }
.tooltip.bottom-left .tooltip-arrow {
  top: 0;
  left: 6px;
  border-width: 0 6px 6px;
  border-bottom-color: rgba(0, 0, 0, 0.8); }
.tooltip.bottom-right .tooltip-arrow {
  top: 0;
  right: 6px;
  border-width: 0 6px 6px;
  border-bottom-color: rgba(0, 0, 0, 0.8); }

.caret {
  display: inline-block;
  width: 0;
  height: 0;
  margin-left: 2px;
  vertical-align: middle;
  border-top: 5px solid;
  border-right: 5px solid transparent;
  border-left: 5px solid transparent; }

.dropdown {
  position: relative; }

.dropdown-toggle:focus {
  outline: 0; }

.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 10;
  display: none;
  float: left;
  min-width: 160px;
  text-align: left;
  background-color: white;
  border: 1px solid transparent;
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.175);
  background-clip: padding-box; }
  .dropdown-menu.pull-right {
    right: 0;
    left: auto; }
  .dropdown-menu > li > a {
    display: block;
    padding: 3px 20px;
    clear: both;
    color: #007acb;
    white-space: nowrap; }

.dropdown-menu > li > a:hover, .dropdown-menu > li > a:focus {
  text-decoration: none;
  color: #9accec;
  background-color: #d2e3f4; }

.dropdown-menu > .active > a, .dropdown-menu > .active > a:hover, .dropdown-menu > .active > a:focus {
  color: #007acb;
  text-decoration: none;
  outline: 0;
  background-color: #d2e3f4; }

.dropdown-menu > .disabled > a, .dropdown-menu > .disabled > a:hover, .dropdown-menu > .disabled > a:focus {
  color: gray; }

.dropdown-menu > .disabled > a:hover, .dropdown-menu > .disabled > a:focus {
  text-decoration: none;
  background-color: transparent;
  background-image: none;
  cursor: not-allowed; }

.open > .dropdown-menu {
  display: block; }
.open > a {
  outline: 0; }

.dropdown-menu-right {
  left: auto;
  right: 0; }

.dropdown-menu-left {
  left: 0;
  right: auto; }

.dropdown-header {
  display: block;
  padding: 3px 20px;
  font-size: 12px;
  line-height: 1rem;
  color: #505a69; }

.dropdown-backdrop {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  top: 0;
  z-index: 0; }

.pull-right > .dropdown-menu {
  right: 0;
  left: auto; }

.dropup .caret,
.navbar-fixed-bottom .dropdown .caret {
  border-top: 0;
  border-bottom: 5px solid;
  content: ""; }
.dropup .dropdown-menu,
.navbar-fixed-bottom .dropdown .dropdown-menu {
  top: auto;
  bottom: 100%;
  margin-bottom: 1px; }

.carousel {
  position: relative; }

.carousel-inner {
  position: relative;
  overflow: hidden;
  width: 100%; }
  .carousel-inner > .item {
    display: none;
    position: relative;
    -webkit-transition: .6s ease-in-out left;
    -moz-transition: .6s ease-in-out left;
    transition: .6s ease-in-out left; }
  .carousel-inner > .active,
  .carousel-inner > .next,
  .carousel-inner > .prev {
    display: block; }
  .carousel-inner > .active {
    left: 0; }
  .carousel-inner > .next,
  .carousel-inner > .prev {
    position: absolute;
    top: 0;
    width: 100%; }
  .carousel-inner > .next {
    left: 100%; }
  .carousel-inner > .prev {
    left: -100%; }
  .carousel-inner > .next.left,
  .carousel-inner > .prev.right {
    left: 0; }
  .carousel-inner > .active.left {
    left: -100%; }
  .carousel-inner > .active.right {
    left: 100%; }

.carousel-control {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  width: 10%;
  opacity: 0.4;
  font-size: 3rem;
  color: white;
  text-align: center;
  text-shadow: 0 0 3px rgba(0, 0, 0, 0.3); }
  .carousel-control.left {
    background: -moz-linear-gradient(left, rgba(0, 0, 0, 0.5) 0%, transparent 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right top, color-stop(0%, rgba(0, 0, 0, 0.5)), color-stop(100%, transparent));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(left, rgba(0, 0, 0, 0.5) 0%, transparent 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(left, rgba(0, 0, 0, 0.5) 0%, transparent 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(left, rgba(0, 0, 0, 0.5) 0%, transparent 100%);
    /* IE10+ */
    background: linear-gradient(to right, rgba(0, 0, 0, 0.5) 0%, transparent 100%);
    /* W3C */ }
  .carousel-control.right {
    left: auto;
    right: 0;
    background: -moz-linear-gradient(left, transparent 0%, rgba(0, 0, 0, 0.5) 100%);
    /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right top, color-stop(0%, transparent), color-stop(100%, rgba(0, 0, 0, 0.5)));
    /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(left, transparent 0%, rgba(0, 0, 0, 0.5) 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(left, transparent 0%, rgba(0, 0, 0, 0.5) 100%);
    /* Opera 11.10+ */
    background: -ms-linear-gradient(left, transparent 0%, rgba(0, 0, 0, 0.5) 100%);
    /* IE10+ */
    background: linear-gradient(to right, transparent 0%, rgba(0, 0, 0, 0.5) 100%);
    /* W3C */ }
  .carousel-control:hover, .carousel-control:focus {
    outline: 0;
    color: white;
    text-decoration: none;
    opacity: 0.9; }
  .carousel-control .icon-prev,
  .carousel-control .icon-next,
  .carousel-control .glyphicon-chevron-left,
  .carousel-control .glyphicon-chevron-right {
    position: absolute;
    top: 50%;
    z-index: 5;
    display: inline-block; }
  .carousel-control .icon-prev,
  .carousel-control .glyphicon-chevron-left {
    left: 50%;
    margin-left: -10px; }
  .carousel-control .icon-next,
  .carousel-control .glyphicon-chevron-right {
    right: 50%;
    margin-right: -10px; }
  .carousel-control .icon-prev,
  .carousel-control .icon-next {
    width: 3rem;
    height: 3rem;
    margin-top: -1.5rem; }

.carousel-indicators {
  position: absolute;
  bottom: 10px;
  left: 50%;
  z-index: 15;
  width: 60%;
  margin-left: -30%;
  padding-left: 0;
  list-style: none;
  text-align: center; }
  .carousel-indicators li {
    display: inline-block;
    width: 10px;
    height: 10px;
    margin: 1px;
    text-indent: -999px;
    border: 1px solid white;
    border-radius: 10px;
    cursor: pointer;
    background-color: #000 \9;
    background-color: transparent; }
  .carousel-indicators .active {
    margin: 0;
    width: 12px;
    height: 12px;
    background-color: #007acb; }

.carousel-caption {
  position: absolute;
  left: 15%;
  right: 15%;
  bottom: 20px;
  z-index: 10;
  padding-top: 20px;
  padding-bottom: 20px;
  color: white;
  text-align: center;
  text-shadow: 0 0 3px rgba(0, 0, 0, 0.3); }
  .carousel-caption .btn {
    text-shadow: none; }

.modal-open {
  overflow: hidden; }

.modal {
  display: none;
  overflow: auto;
  overflow-y: scroll;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 11;
  -webkit-overflow-scrolling: touch;
  outline: 0; }

.modal-dialog {
  position: relative;
  width: auto;
  margin: 1rem; }

.modal-content {
  position: relative;
  background-color: white;
  border: 1px solid black;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 16px;
  box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);
  background-clip: padding-box;
  outline: 0; }

.modal-backdrop {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 10;
  background-color: #444444; }
  .modal-backdrop.fade {
    opacity: 0; }
  .modal-backdrop.in {
    opacity: 0.66; }

.modal-header {
  padding: 1.5rem;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  min-height: 2.5rem; }

.modal-title {
  margin: 0;
  line-height: 1rem; }

.modal-body {
  position: relative;
  padding: 1.5rem 1rem; }

.modal-footer {
  padding: 1.5rem 1rem 0.5rem;
  text-align: right;
  border-top: 1px solid rgba(0, 0, 0, 0.1); }
  .modal-footer .btn + .btn {
    margin-left: 5px;
    margin-bottom: 0; }
  .modal-footer .btn-group .btn + .btn {
    margin-left: -1px; }
  .modal-footer .btn-block + .btn-block {
    margin-left: 0; }

.modal-scrollbar-measure {
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px;
  overflow: scroll; }

.collapse {
  display: none; }
  .collapse.in {
    display: block; }

.collapsing {
  position: relative;
  height: 0;
  overflow: hidden;
  -webkit-transition: height .35s ease;
  -o-transition: height .35s ease;
  transition: height .35s ease; }

.affix {
  position: fixed; }
